import 'package:chatapp/pages/forgotpassword.dart';
import 'package:chatapp/pages/home.dart';
import 'package:chatapp/pages/signup.dart';
import 'package:chatapp/service/database.dart';
import 'package:chatapp/service/shared_pref.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

class SignIn extends StatefulWidget {
  const SignIn({super.key});

  @override
  State<SignIn> createState() => _SignInState();
}

class _SignInState extends State<SignIn> {
  String email = "", password = "", name = "", pic = "", username = "", id = "";
  TextEditingController usermailcontroller = new TextEditingController();
  TextEditingController userpasswordcontroller = new TextEditingController();

  final _formkey = GlobalKey<FormState>();
  bool isLoading = false; // Flag to control loading spinner



userLogin() async {
  setState(() {
    isLoading = true; // Show loading indicator
  });

  // Validate email
  if (email.isEmpty || !RegExp(r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$").hasMatch(email)) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
      backgroundColor: Colors.orangeAccent,
      content: Text(
        "Please enter a valid email",
        style: TextStyle(fontSize: 18.0),
      ),
    ));
    setState(() {
      isLoading = false; // Hide loading indicator
    });
    return; // Return early if email is invalid
  }

  // Validate password
  if (password.isEmpty || password.length < 6) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
      backgroundColor: Colors.orangeAccent,
      content: Text(
        "Password must be at least 6 characters long",
        style: TextStyle(fontSize: 18.0),
      ),
    ));
    setState(() {
      isLoading = false; // Hide loading indicator
    });
    return; // Return early if password is invalid
  }

  try {
    // Attempt to sign in the user
    await FirebaseAuth.instance
        .signInWithEmailAndPassword(email: email, password: password);

    QuerySnapshot querySnapshot =
        await DatabaseMethods().getUserByEmail(email);

    name = "${querySnapshot.docs[0]["Name"]}";
    username = "${querySnapshot.docs[0]["username"]}";
    pic = "${querySnapshot.docs[0]["Photo"]}";
    id = querySnapshot.docs[0].id;

    await SharedPreferenceHelper().saveUserDisplayName(name);
    await SharedPreferenceHelper().saveUserName(username);
    await SharedPreferenceHelper().saveUserId(id);
    await SharedPreferenceHelper().saveUserPic(pic);

    // Navigate to the Home page after successful login
    Navigator.pushReplacement(
        context, MaterialPageRoute(builder: (context) => Home()));
  } on FirebaseAuthException catch (e) {
    print("error data ${e.code}");
    if (e.code == "user-not-found") {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
        backgroundColor: Colors.redAccent,
        content: Text(
          "No User Found for the Email",
          style: TextStyle(fontSize: 18.0, color: Colors.black),
        ),
      ));
    } else if (e.code == 'wrong-password') {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
        backgroundColor: Colors.red,
        content: Text(
          "Incorrect Password",
          style: TextStyle(fontSize: 20.0),
        ),
      ));
    } else {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
        backgroundColor: Colors.red,
        content: Text(
          e.code ?? "An error occurred",
          style: TextStyle(fontSize: 20.0),
        ),
      ));
    }
  } finally {
    setState(() {
      isLoading = false; // Hide loading indicator after login attempt
    });
  }
}




  // userLogin() async {
  //   setState(() {
  //     isLoading = true; // Show loading indicator
  //   });

  //   try {
  //     await FirebaseAuth.instance
  //         .signInWithEmailAndPassword(email: email, password: password);

  //     QuerySnapshot querySnapshot =
  //         await DatabaseMethods().getUserByEmail(email);

  //     name = "${querySnapshot.docs[0]["Name"]}";
  //     username = "${querySnapshot.docs[0]["username"]}";
  //     pic = "${querySnapshot.docs[0]["Photo"]}";
  //     id = querySnapshot.docs[0].id;

  //     await SharedPreferenceHelper().saveUserDisplayName(name);
  //     await SharedPreferenceHelper().saveUserName(username);
  //     await SharedPreferenceHelper().saveUserId(id);
  //     await SharedPreferenceHelper().saveUserPic(pic);

  //     Navigator.pushReplacement(
  //         context, MaterialPageRoute(builder: (context) => Home()));
  //   } on FirebaseAuthException catch (e) {
  //     print("error ${e.code}");
  //     if (e.code == "user-not-found") {
  //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
  //         backgroundColor: Colors.redAccent,
  //         content: Text(
  //           "No User Found for the Email",
  //           style: TextStyle(fontSize: 18.0, color: Colors.black),
  //         ),
  //       ));
  //     } else if (e.code == 'wrong-password') {
  //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
  //         backgroundColor: Colors.red,
  //           content: Text(
  //          e.code,
  //         style: TextStyle(fontSize: 20.0),
  //       )));
  //     } else {
  //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
  //         backgroundColor: Colors.red,
  //           content: Text(
  //         e.code,
  //         style: TextStyle(fontSize: 20.0),
  //       )));
  //     }
  //   } finally {
  //     setState(() {
  //       isLoading = false; // Hide loading indicator after login attempt
  //     });
  //   }
  // }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        children: [
          Container(
            child: Stack(
              children: [
                Container(
                  height: MediaQuery.of(context).size.height / 4.0,
                  width: MediaQuery.of(context).size.width,
                  decoration: BoxDecoration(
                      gradient: LinearGradient(
                          colors: [Color(0xFF7f30fe), Color(0xFF6380fb)],
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight),
                      borderRadius: BorderRadius.vertical(
                          bottom: Radius.elliptical(
                              MediaQuery.of(context).size.width, 105.0))),
                ),
                Padding(
                  padding: const EdgeInsets.only(top: 70.0),
                  child: Column(
                    children: [
                      Center(
                          child: Text(
                        "SignIn",
                        style: TextStyle(
                            color: Colors.white,
                            fontSize: 24.0,
                            fontWeight: FontWeight.bold),
                      )),
                      Center(
                          child: Text(
                        "LogIn to your account",
                        style: TextStyle(
                            color: Color(0xFFbbb0ff),
                            fontSize: 18.0,
                            fontWeight: FontWeight.w500),
                      )),
                      SizedBox(height: 20.0),
                      Container(
                        margin:
                            EdgeInsets.symmetric(vertical: 20.0, horizontal: 20.0),
                        child: Material(
                          elevation: 5.0,
                          borderRadius: BorderRadius.circular(10),
                          child: Container(
                            padding: EdgeInsets.symmetric(
                                vertical: 8.0, horizontal: 20.0),
                            height: MediaQuery.of(context).size.height / 2,
                            width: MediaQuery.of(context).size.width,
                            decoration: BoxDecoration(
                                color: Colors.white,
                                borderRadius: BorderRadius.circular(10)),
                            child: Padding(
                              padding: EdgeInsets.only(top: 50),
                              child: Form(
                                key: _formkey,
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      "Email",
                                      style: TextStyle(
                                          color: Colors.black,
                                          fontSize: 18,
                                          fontWeight: FontWeight.w500),
                                    ),
                                    SizedBox(
                                      height: 10.0,
                                    ),
                                    Container(
                                      decoration: BoxDecoration(
                                          border: Border.all(
                                              width: 1.0, color: Colors.black38),
                                          borderRadius: BorderRadius.circular(10)),
                                      child: TextFormField(
                                        controller: usermailcontroller,
                                        // validator: (value) {
                                        //   if (value == null || value.isEmpty) {
                                        //     return 'Please Enter E-mail';
                                        //   }
                                        //   return null;
                                        // },
                                        decoration: InputDecoration(
                                            border: InputBorder.none,
                                            prefixIcon: Icon(Icons.mail_outline,
                                                color: Color(0xFF7f30fe))),
                                      ),
                                    ),
                                    SizedBox(
                                      height: 20.0,
                                    ),
                                    Text(
                                      "Password",
                                      style: TextStyle(
                                          color: Colors.black,
                                          fontSize: 18,
                                          fontWeight: FontWeight.w500),
                                    ),
                                    SizedBox(
                                      height: 10.0,
                                    ),
                                    Container(
                                      decoration: BoxDecoration(
                                          border: Border.all(
                                              width: 1.0, color: Colors.black38),
                                          borderRadius: BorderRadius.circular(10)),
                                      child: TextFormField(
                                        controller: userpasswordcontroller,
                                        // validator: (value) {
                                        //   if (value == null || value.isEmpty) {
                                        //     return 'Please Enter Password';
                                        //   }
                                        //   return null;
                                        // },
                                        decoration: InputDecoration(
                                            border: InputBorder.none,
                                            prefixIcon: Icon(
                                                Icons.password_outlined,
                                                color: Color(0xFF7f30fe))),
                                        obscureText: true, //password hide
                                      ),
                                    ),
                                    SizedBox(
                                      height: 10.0,
                                    ),
                                    Container(
                                      alignment: Alignment.bottomRight,
                                      child: GestureDetector(
                                        onTap: () {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  ForgotPassword(),
                                            ),
                                          );
                                        },
                                        child: Text(
                                          "Forget Password?",
                                          style: TextStyle(
                                              color: Colors.black,
                                              fontSize: 16,
                                              fontWeight: FontWeight.w500),
                                        ),
                                      ),
                                    ),
                                    SizedBox(
                                      height: 50.0,
                                    ),
                                    GestureDetector(
                                      onTap: () {
                                        if (_formkey.currentState!.validate()) {
                                          setState(() {
                                            email = usermailcontroller.text;
                                            password = userpasswordcontroller.text;
                                          });
                                        }
                                        userLogin();
                                      },
                                      child: Center(
                                        child: Container(
                                          width: 130,
                                          child: Material(
                                            elevation: 5.0,
                                            borderRadius: BorderRadius.circular(10),
                                            child: Container(
                                              padding: EdgeInsets.all(10),
                                              decoration: BoxDecoration(
                                                  color: Color(0xFF6380fb),
                                                  borderRadius:
                                                      BorderRadius.circular(10)),
                                              child: Center(
                                                  child:  Text("SignIn",
                                                          style: TextStyle(
                                                              color: Colors.white,
                                                              fontSize: 18.0,
                                                              fontWeight: FontWeight.bold))),
                                            ),
                                          ),
                                        ),
                                      ),
                                    )
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      SizedBox(
                        height: 40.0,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            "Don't have an account?",
                            style: TextStyle(color: Colors.black, fontSize: 16.0),
                          ),
                          GestureDetector(
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (context) => SignUp(),
                                ),
                              );
                            },
                            child: Text(
                              " Sign Up Now!",
                              style: TextStyle(
                                  color: Color(0xFF7f30fe),
                                  fontSize: 16.0,
                                  fontWeight: FontWeight.w500),
                            ),
                          ),
                        ],
                      )
                    ],
                  ),
                )
              ],
            ),
          ),
          if (isLoading)
            Container(
              color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
              child: Center(
                child: CircularProgressIndicator(
                  valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                ),
              ),
            ),
        ],
      ),
    );
  }
}
