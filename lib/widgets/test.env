// // import 'package:chatapp/service/database.dart';
// // import 'package:chatapp/service/shared_pref.dart';
// // import 'package:cloud_firestore/cloud_firestore.dart';
// // import 'package:flutter/material.dart';
// // import 'package:intl/intl.dart';
// // import 'package:random_string/random_string.dart';

// // class ChatPage extends StatefulWidget {
// // String name, profileurl, username;
// // ChatPage({required this.name, required this.profileurl, required this.username});

// //   @override
// //   State<ChatPage> createState() => _ChatPageState();
// // }

// // class _ChatPageState extends State<ChatPage> {

// //   //SEND MSG TO CHAT TO USER
// //   TextEditingController messagecontroller= new TextEditingController();
// //   String? myUserName,myProfilePic, myName, myEmail, messageId, chatRoomId;

// //   getthesharedpref()async{
// //     myUserName= await SharedPreferenceHelper.getUserName();
// //     myProfilePic= await SharedPreferenceHelper.getUserPic();
// //     myName = await SharedPreferenceHelper.getUserDisplayName();
// //     myEmail = await SharedPreferenceHelper.getUserEmail();

// //     chatRoomId= getChatRoomIdbyUsername(widget.username, myUserName!);
// //     setState(() {

// //     });
// //   }

// //   ontheload()async{
// //     await getthesharedpref();
// //     setState(() {

// //     });
// //   }

// //   @override
// //   void initState(){
// //     super.initState();
// //     ontheload();
// //   }

// // addMessage(bool sendClicked){
// //     if(messagecontroller.text!=""){
// //       String message = messagecontroller.text;
// //       messagecontroller.text="";

// //       DateTime now= DateTime.now();
// //       String formattedDate= DateFormat('h:mma').format(now);
// //       Map<String, dynamic>messageInfoMap={
// //         "message": message,
// //         "sendby": myUserName,
// //         "ts": formattedDate,
// //         "time": FieldValue.serverTimestamp(),
// //         "imgUrl": myProfilePic,
// //       };
// //       messageId ??= randomAlphaNumeric(10);

// //       DatabaseMethods().addMessage(chatRoomId!, messageId!, messageInfoMap).then((value) {
// //         Map<String,dynamic> lastMessageInfoMap={
// //             "lastMessaage": message,
// //             "lastMessageSendTs": formattedDate,
// //             "time": FieldValue.serverTimestamp(),
// //             "LastMessageSendBy": myUserName,
// //         };
// //         DatabaseMethods().updateLastMessageSend(chatRoomId, lastMessageInfoMap);
// //         if(sendClicked){
// //           messageId=null;
// //         }
// //       });
// //     }
// //   }
// //  //--------2:58:08

// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //        backgroundColor: Color(0xFF553370),
// //       body: Container(
// //         margin: EdgeInsets.only(top: 60.0),
// //         child: Column(children: [
// //       Padding(
// //         padding: const EdgeInsets.only(left: 10.0),
// //         child: Row(
// //           children: [
// //           Icon(Icons.arrow_back_ios_new_outlined, color: Color(0xffc199cd),),
// //           SizedBox(width: 90.0),
// //          Text(
// //            widget.name, style: TextStyle(color: Color(0xffc199cd), fontSize: 20.0, fontWeight: FontWeight.w500),
// //               ),
// //         ],),
// //       ),
// //       SizedBox(height: 24.0),
// //       Container(
// //         padding: EdgeInsets.only(left: 20, right: 20.0, top: 50.0, bottom: 30.0),
// //         width: MediaQuery.of(context).size.width,
// //         height: MediaQuery.of(context).size.height/1.14,
// //         decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.only(topLeft: Radius.circular(30), topRight: Radius.circular(30))),
// //         child: Column(children: [
// //         Container(
// //         padding: EdgeInsets.all(10),
// //         margin: EdgeInsets.only(left: MediaQuery.of(context).size.width/2),
// //         alignment: Alignment.bottomRight,
// //         decoration: BoxDecoration(
// //           color: Color.fromARGB(255, 226, 227, 229), borderRadius: BorderRadius.only(topLeft: Radius.circular(10), topRight:Radius.circular(10),bottomLeft: Radius.circular(10)),
// //         ),
// //         child: Text("Hello, How was the day?", style: TextStyle(color: Colors.black,fontSize: 15.0, fontWeight: FontWeight.w500),
// //        )),
// //        SizedBox(height: 20.0),
// //        Container(
// //         padding: EdgeInsets.all(10),
// //         margin: EdgeInsets.only(right: MediaQuery.of(context).size.width/3),
// //         alignment: Alignment.topLeft,
// //         decoration: BoxDecoration(
// //           color: Color.fromARGB(255, 209, 221, 246),
// //           borderRadius: BorderRadius.only(bottomRight: Radius.circular(10), topRight:Radius.circular(10), topLeft: Radius.circular(10)),
// //         ),
// //         child: Text("The day was really good", style: TextStyle(color: Colors.black,fontSize: 15.0, fontWeight: FontWeight.w500),
// //        )),
// //       Spacer(),
// //       Material(
// //         elevation: 5.0,
// //         borderRadius: BorderRadius.circular(30),
// //         child: Container(
// //           padding: EdgeInsets.only(left: 10.0),
// //           decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(30)),
// //           child: Row(children: [
// //           Expanded(child: TextField(
// //             controller: messagecontroller,
// //             decoration: InputDecoration(border: InputBorder.none, hintText: "Type a message", hintStyle: TextStyle(color: Colors.black45)),
// //           ),
// //           ),
// //           GestureDetector(
// //             onTap: (){
// //               addMessage(true);
// //             },
// //             child: Container(
// //               padding: EdgeInsets.all(8),
// //               decoration: BoxDecoration(color: Color(0xFFf3f3f3), borderRadius: BorderRadius.circular(50)),
// //               child: Center(child: Icon(Icons.send, color: Color.fromARGB(255, 166, 159, 159)))
// //             ),
// //           ),
// //         ],),
// //        ),
// //       ),
// //       ],),
// //       ),
// //       ],),),
// //     );
// //   }
// // }
// //----------------------
// // import 'package:chatapp/main.dart';
// // import 'package:chatapp/pages/home.dart';
// // import 'package:chatapp/service/database.dart';
// // import 'package:chatapp/service/shared_pref.dart';
// // import 'package:cloud_firestore/cloud_firestore.dart';
// // import 'package:flutter/material.dart';
// // import 'package:intl/intl.dart';
// // import 'package:random_string/random_string.dart';

// // class ChatPage extends StatefulWidget {
// //   final String name;
// //   final String profileurl;
// //   final String username;

// //   ChatPage({required this.name, required this.profileurl, required this.username});

// //   @override
// //   State<ChatPage> createState() => _ChatPageState();
// // }

// // class _ChatPageState extends State<ChatPage> {
// //   TextEditingController messagecontroller = TextEditingController();
// //   String? myUserName, myProfilePic, myName, myEmail, messageId, chatRoomId;
// //   final SharedPreferenceHelper sharedPrefHelper = SharedPreferenceHelper(); // Create a shared preference helper instance
// //   Stream? messageStream;

// //   /// Fetch shared preferences data
// //   Future<void> getSharedPref() async {
// //     myUserName = await sharedPrefHelper.getUserName();
// //     myProfilePic = await sharedPrefHelper.getUserPic();
// //     myName = await sharedPrefHelper.getUserDisplayName();
// //     myEmail = await sharedPrefHelper.getUserEmail();

// //     chatRoomId = getChatRoomIdByUsername(widget.username, myUserName!);
// //     setState(() {});
// //   }

// // ontheload() async{
// //   await getSharedPref();
// //   await getAndSetMessages();
// //   setState(() {

// //   });
// // }
// //   /// Generate chat room ID based on usernames
// //   String getChatRoomIdByUsername(String user1, String user2) {
// //     return user1.compareTo(user2) > 0 ? "$user1\_$user2" : "$user2\_$user1";
// //   }

// //   Widget chatMessageTile(String message, bool sendByMe){
// //     return Row(mainAxisAlignment:sendByMe?MainAxisAlignment.end:MainAxisAlignment.start,
// //     children: [
// //       Flexible(child: Container(
// //         padding: EdgeInsets.all(16),
// //         margin: EdgeInsets.symmetric(horizontal: 16, vertical: 4),
// //         decoration: BoxDecoration(borderRadius: BorderRadius.only(topLeft: Radius.circular(24),
// //         bottomRight: sendByMe?  Radius.circular(0): Radius.circular(24),
// //         topRight: Radius.circular(24),
// //         bottomLeft: sendByMe? Radius.circular(24) :Radius.circular(0)
// //         ),
// //         color: sendByMe? Color.fromARGB(255, 234, 236, 240):
// //         Color.fromARGB(255, 211, 228, 243)
// //         ),
// //        child: Text(
// //                      message,
// //                       style: TextStyle(color: Colors.black, fontSize: 15.0, fontWeight: FontWeight.w500),
// //                     ),
// //       ),)
// //     ],
// //     );
// //   }

// //   Widget chatMessage(){
// //     return StreamBuilder(
// //       stream: messageStream,
// //       builder: (context, AsyncSnapshot snapshot){
// //       return snapshot.hasData? ListView.builder(
// //       padding: EdgeInsets.only(bottom: 90.0, top: 130),
// //       itemCount: snapshot.data.docs.length,
// //       reverse: true,
// //       itemBuilder: (context, index){
// //        DocumentSnapshot ds= snapshot.data.docs[index];
// //        return chatMessageTile(ds["message"], myUserName==ds["sendBy"]);
// //       }) : Center(
// //         child: CircularProgressIndicator(),
// //       );
// //     });
// //   }
// // //3:04:55

// //   /// Add a message to the chat
// //   void addMessage(bool sendClicked) {
// //     if (messagecontroller.text.isNotEmpty) {
// //       String message = messagecontroller.text;
// //       messagecontroller.clear(); // Clear the input field after sending

// //       DateTime now = DateTime.now();
// //       String formattedDate = DateFormat('h:mma').format(now);

// //       Map<String, dynamic> messageInfoMap = {
// //         "message": message,
// //         "sendby": myUserName,
// //         "ts": formattedDate,
// //         "time": FieldValue.serverTimestamp(),
// //         "imgUrl": myProfilePic,
// //       };

// //       messageId ??= randomAlphaNumeric(10);

// //       DatabaseMethods().addMessage(chatRoomId!, messageId!, messageInfoMap).then((_) {
// //         Map<String, dynamic> lastMessageInfoMap = {
// //           "lastMessage": message,
// //           "lastMessageSendTs": formattedDate,
// //           "time": FieldValue.serverTimestamp(),
// //           "lastMessageSendBy": myUserName,
// //         };
// //         DatabaseMethods().updateLastMessageSend(chatRoomId!, lastMessageInfoMap);

// //         if (sendClicked) {
// //           messageId = null; // Reset message ID after sending
// //         }
// //       });
// //     }
// //   }

// //   @override
// //   void initState() {
// //     super.initState();
// //     getSharedPref(); // Load shared preferences on initialization
// //   }

// //   getAndSetMessages()async{
// //   messageStream= await DatabaseMethods().getChatRoomMessages(chatRoomId!);
// //   setState(() {

// //   });
// //   }
// //   //3:14:05

// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //       backgroundColor: Color(0xFF553370),
// //       body: Container(
// //         margin: EdgeInsets.only(top: 60.0),
// //         child: Stack(
// //           children: [
// //             // Header Section
// //             Container(
// //               margin: EdgeInsets.only(top: 50.0),
// //               width: MediaQuery.of(context).size.width,
// //               height: MediaQuery.of(context).size.height/1.12,
// //               decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.only(topLeft: Radius.circular(30), topRight:  Radius.circular(30), ) ),
// //               child: chatMessage()),
// //             Padding(
// //               padding: const EdgeInsets.only(left: 10.0),
// //               child: Row(
// //                 children: [
// //                     GestureDetector(
// //                       onTap: (){
// //                      Navigator.pushReplacement(context, MaterialPageRoute(builder:(context)=> Home() ));
// //                     },
// //                       child: Icon(
// //                       Icons.arrow_back_ios_new_outlined,
// //                       color: Color(0xffc199cd),
// //                     )
// //                     ),
// //                   SizedBox(width: 90.0),
// //                   Text(
// //                     widget.name,
// //                     style: TextStyle(
// //                       color: Color(0xffc199cd),
// //                       fontSize: 20.0,
// //                       fontWeight: FontWeight.w500,
// //                     ),
// //                   ),
// //                 ],
// //               ),
// //             ),
// //             // SizedBox(height: 24.0),
// //             // // Chat Body
// //             // Container(
// //             //   padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
// //             //   width: MediaQuery.of(context).size.width,
// //             //   height: MediaQuery.of(context).size.height / 1.14,
// //             //   decoration: BoxDecoration(
// //             //     color: Colors.white,
// //             //     borderRadius: BorderRadius.only(
// //             //       topLeft: Radius.circular(30),
// //             //       topRight: Radius.circular(30),
// //             //     ),
// //             //   ),
// //             //   child: Column(
// //             //     children: [
// //             //       // Example received message
// //             //       Container(
// //             //         padding: EdgeInsets.all(10),
// //             //         margin: EdgeInsets.only(left: MediaQuery.of(context).size.width / 2),
// //             //         alignment: Alignment.bottomRight,
// //             //         decoration: BoxDecoration(
// //             //           color: Color.fromARGB(255, 226, 227, 229),
// //             //           borderRadius: BorderRadius.only(
// //             //             topLeft: Radius.circular(10),
// //             //             topRight: Radius.circular(10),
// //             //             bottomLeft: Radius.circular(10),
// //             //           ),
// //             //         ),
// //             //         child: Text(
// //             //           "Hello, How was the day?",
// //             //           style: TextStyle(color: Colors.black, fontSize: 15.0, fontWeight: FontWeight.w500),
// //             //         ),
// //             //       ),
// //             //       // SizedBox(height: 20.0),
// //                   // // Example sent message
// //                   // Container(
// //                   //   padding: EdgeInsets.all(10),
// //                   //   margin: EdgeInsets.only(right: MediaQuery.of(context).size.width / 3),
// //                   //   alignment: Alignment.topLeft,
// //                   //   decoration: BoxDecoration(
// //                   //     color: Color.fromARGB(255, 209, 221, 246),
// //                   //     borderRadius: BorderRadius.only(
// //                   //       bottomRight: Radius.circular(10),
// //                   //       topRight: Radius.circular(10),
// //                   //       topLeft: Radius.circular(10),
// //                   //     ),
// //                   //   ),
// //                   //   child: Text(
// //                   //     "The day was really good",
// //                   //     style: TextStyle(color: Colors.black, fontSize: 15.0, fontWeight: FontWeight.w500),
// //                   //   ),
// //                   // ),
// //                   // Spacer(),
// //                   // Input Box
// //                   Container(
// //                     alignment: Alignment.bottomCenter,
// //                     child: Material(
// //                       elevation: 5.0,
// //                       borderRadius: BorderRadius.circular(30),
// //                       child: Container(
// //                         margin: EdgeInsets.only(left: 20.0, right: 20.0, bottom: 10.0),
// //                         padding: EdgeInsets.only(left: 10.0),
// //                         decoration: BoxDecoration(
// //                           color: Colors.white,
// //                           borderRadius: BorderRadius.circular(30),
// //                         ),
// //                         child:
// //                               TextField(
// //                                 controller: messagecontroller,
// //                                 decoration: InputDecoration(
// //                                   border: InputBorder.none,
// //                                   hintText: "Type a message",
// //                                   hintStyle: TextStyle(color: Colors.black45), suffixIcon: Icon(Icons.send_rounded) ),
// //                                 ),
// //                               ),
// //                             ),
// //                             // GestureDetector(
// //                             //   onTap: () {
// //                             //     addMessage(true); // Send message
// //                             //   },
// //                             //   child: Container(
// //                             //     padding: EdgeInsets.all(8),
// //                             //     decoration: BoxDecoration(
// //                             //       color: Color(0xFFf3f3f3),
// //                             //       borderRadius: BorderRadius.circular(50),
// //                             //     ),
// //                             //     child: Center(
// //                             //       child: Icon(
// //                             //         Icons.send,
// //                             //         color: Color.fromARGB(255, 166, 159, 159),
// //                             //       ),
// //                             //     ),
// //                             //   ),
// //                             // ),
// //                           //],
// //                         ),
// //                    // ),
// //                  // ),
// //                 ],
// //               ),
// //         ),
// //     );
// //   }
// // }

// // //3:22:11
// //-----------

// import 'package:chatapp/pages/home.dart';
// import 'package:chatapp/service/database.dart';
// import 'package:chatapp/service/shared_pref.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// //import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:flutter/material.dart';
// import 'package:intl/intl.dart';
// import 'package:random_string/random_string.dart';

// class ChatPage extends StatefulWidget {
//   final String name;
//   final String profileurl;
//   final String username;

//   ChatPage({
//     required this.name,
//     required this.profileurl,
//     required this.username,
//   });

//   @override
//   State<ChatPage> createState() => _ChatPageState();
// }

// class _ChatPageState extends State<ChatPage> {
//   TextEditingController messageController = TextEditingController();
//   String? myUserName, myProfilePic, myName, myEmail, messageId, chatRoomId;
//   bool loading = true; // To manage loader visibility
//   final SharedPreferenceHelper sharedPrefHelper = SharedPreferenceHelper();
//  Stream? messageStream;
//   /// Fetch shared preferences data and initialize chat room
//   Future<void> getSharedPref() async {
//     try {
//       myUserName = await sharedPrefHelper.getUserName();
//       myProfilePic = await sharedPrefHelper.getUserPic();
//       myName = await sharedPrefHelper.getUserDisplayName();
//       myEmail = await sharedPrefHelper.getUserEmail();

//       chatRoomId = getChatRoomIdByUsername(widget.username, myUserName!);

//       print("Shared Preferences Loaded:");
//       print("Username: $myUserName");
//       print("Profile Pic: $myProfilePic");
//       print("Name: $myName");
//       print("Email: $myEmail");
//       print("Chat Room ID: $chatRoomId");
//     } catch (e) {
//       print("Error loading shared preferences: $e");
//     } finally {
//       setState(() {
//         loading = false;
//       });
//     }
//   }

//   /// Generate consistent chat room ID based on usernames
//   String getChatRoomIdByUsername(String user1, String user2) {
//     return user1.compareTo(user2) > 0 ? "$user1\_$user2" : "$user2\_$user1";
//   }

// // Future<void> addMessage(bool sendClicked) async {
// //   if (messageController.text.isNotEmpty) {
// //     String message = messageController.text;
// //     messageController.clear();

// //     DateTime now = DateTime.now();
// //     String formattedDate = DateFormat('h:mma').format(now);

// //     Map<String, dynamic> messageInfoMap = {
// //       "message": message,
// //       "sendby": myUserName,
// //       "ts": formattedDate,
// //       "time": FieldValue.serverTimestamp(),
// //       "imgUrl": myProfilePic,
// //     };

// //     print("Sending message: $messageInfoMap");

// //     messageId ??= randomAlphaNumeric(10);

// //     try {
// //       await DatabaseMethods().addMessage(chatRoomId!, messageId!, messageInfoMap);
// //       print("Message added successfully!");

// //       Map<String, dynamic> lastMessageInfoMap = {
// //         "lastMessage": message,
// //         "lastMessageSendTs": formattedDate,
// //         "time": FieldValue.serverTimestamp(),
// //         "lastMessageSendBy": myUserName,
// //       };

// //       DocumentSnapshot chatRoomSnapshot = await FirebaseFirestore.instance.collection('chatRooms').doc(chatRoomId!).get();

// //       if (!chatRoomSnapshot.exists) {
// //         await FirebaseFirestore.instance.collection('chatRooms').doc(chatRoomId!).set({
// //           "created": FieldValue.serverTimestamp(),
// //         });
// //         print("Chat room created successfully.");
// //       }

// //       await _updateLastMessage(lastMessageInfoMap);

// //       if (sendClicked) {
// //         messageId = null;
// //       }
// //     } catch (e) {
// //       print("Error: $e");
// //     }
// //   }
// // }

// // Future<void> _updateLastMessage(Map<String, dynamic> lastMessageInfoMap) async {
// //   try {
// //     await DatabaseMethods().updateLastMessageSend(chatRoomId!, lastMessageInfoMap);
// //     print("Last message updated successfully!");
// //   } catch (e) {
// //     print("Error updating last message: $e");
// //   }
// // }

//   // void addMessage(bool sendClicked) {
//   //   if (messageController.text.isNotEmpty) {
//   //     String message = messageController.text;
//   //     messageController.clear();

//   //     DateTime now = DateTime.now();
//   //     String formattedDate = DateFormat('h:mma').format(now);

//   //     Map<String, dynamic> messageInfoMap = {
//   //       "message": message,
//   //       "sendby": myUserName,
//   //       "ts": formattedDate,
//   //       "time": FieldValue.serverTimestamp(),
//   //       "imgUrl": myProfilePic,
//   //     };

//   //     print("Sending message: $messageInfoMap");

//   //     messageId ??= randomAlphaNumeric(10);

//   //     // Add the message to Firestore
//   //     DatabaseMethods()
//   //         .addMessage(chatRoomId!, messageId!, messageInfoMap)
//   //         .then((_) {
//   //       print("Message added successfully!");

//   //       Map<String, dynamic> lastMessageInfoMap = {
//   //         "lastMessage": message,
//   //         "lastMessageSendTs": formattedDate,
//   //         "time": FieldValue.serverTimestamp(),
//   //         "lastMessageSendBy": myUserName,
//   //       };

//   //       // Ensure the chat room exists
//   //       FirebaseFirestore.instance
//   //           .collection('chatRooms')
//   //           .doc(chatRoomId!)
//   //           .get()
//   //           .then((docSnapshot) {
//   //         if (!docSnapshot.exists) {
//   //           // Chat room doesn't exist, create it
//   //           FirebaseFirestore.instance
//   //               .collection('chatRooms')
//   //               .doc(chatRoomId!)
//   //               .set({
//   //             "created": FieldValue.serverTimestamp(),
//   //             // You can add other fields to initialize the chat room
//   //           }).then((_) {
//   //             print("Chat room created successfully.");
//   //             // Proceed with updating the last message now that the chat room is created
//   //             // _updateLastMessage(lastMessageInfoMap);
//   //           }).catchError((e) {
//   //             print("Error creating chat room: $e");
//   //           });
//   //         } else {
//   //           // Chat room exists, proceed with updating the last message
//   //           print("Chat room not create");
//   //           // _updateLastMessage(lastMessageInfoMap);
//   //         }
//   //       }).catchError((e) {
//   //         print("Error checking chat room: $e");
//   //       });

//   //       if (sendClicked) {
//   //         messageId = null;
//   //       }
//   //     }).catchError((e) {
//   //       print("Error adding message: $e");
//   //     });
//   //   }
//   // }

//   // void _updateLastMessage(Map<String, dynamic> lastMessageInfoMap) {
//   //   // Now update the last message
//   //   DatabaseMethods()
//   //       .updateLastMessageSend(chatRoomId!, lastMessageInfoMap)
//   //       .then((_) {
//   //     print("Last message updated successfully!");
//   //   }).catchError((e) {
//   //     print("Error updating last message: $e");
//   //   });
//   // }
//     getAndSetMessages()async{
//   messageStream= await DatabaseMethods().getChatRoomMessages(chatRoomId!);
//   setState(() {

//   });
//   }

//   Widget chatMessage(){
//     return StreamBuilder(
//       stream: messageStream,
//       builder: (context, AsyncSnapshot snapshot){
//       return snapshot.hasData? ListView.builder(
//       padding: EdgeInsets.only(bottom: 90.0, top: 130),
//       itemCount: snapshot.data.docs.length,
//       reverse: true,
//       itemBuilder: (context, index){
//        DocumentSnapshot ds= snapshot.data.docs[index];
//        return chatMessageTile(ds["message"], myUserName==ds["sendBy"]);
//       }) : Center(
//         child: CircularProgressIndicator(),
//       );
//     });
//   }

//     Widget chatMessageTile(String message, bool sendByMe){
//     return Row(mainAxisAlignment:sendByMe?MainAxisAlignment.end:MainAxisAlignment.start,
//     children: [
//       Flexible(child: Container(
//         padding: EdgeInsets.all(16),
//         margin: EdgeInsets.symmetric(horizontal: 16, vertical: 4),
//         decoration: BoxDecoration(borderRadius: BorderRadius.only(topLeft: Radius.circular(24),
//         bottomRight: sendByMe?  Radius.circular(0): Radius.circular(24),
//         topRight: Radius.circular(24),
//         bottomLeft: sendByMe? Radius.circular(24) :Radius.circular(0)
//         ),
//         color: sendByMe? Color.fromARGB(255, 234, 236, 240):
//         Color.fromARGB(255, 211, 228, 243)
//         ),
//        child: Text(
//                      message,
//                       style: TextStyle(color: Colors.black, fontSize: 15.0, fontWeight: FontWeight.w500),
//                     ),
//       ),)
//     ],
//     );
//   }
// void addMessage(bool sendClicked) {
//   if (messageController.text.isNotEmpty) {
//     String message = messageController.text;
//     messageController.clear();

//     DateTime now = DateTime.now();
//     String formattedDate = DateFormat('h:mma').format(now);

//     Map<String, dynamic> messageInfoMap = {
//       "message": message,
//       "sendby": myUserName,
//       "ts": formattedDate,
//       "time": FieldValue.serverTimestamp(),
//       "imgUrl": myProfilePic,
//     };

//     print("Sending message: $messageInfoMap");

//     messageId ??= randomAlphaNumeric(10);

//     // Add the message to Firestore
//     DatabaseMethods()
//         .addMessage(chatRoomId!, messageId!, messageInfoMap)
//         .then((_) {
//       print("Message added successfully!");

//       Map<String, dynamic> lastMessageInfoMap = {
//         "lastMessage": message,
//         "lastMessageSendTs": formattedDate,
//         "time": FieldValue.serverTimestamp(),
//         "lastMessageSendBy": myUserName,
//       };

//       // Ensure the chat room exists
//       FirebaseFirestore.instance
//           .collection('chatRooms')
//           .doc(chatRoomId!)
//           .get()
//           .then((docSnapshot) {
//         if (!docSnapshot.exists) {
//           // Chat room doesn't exist, create it
//           FirebaseFirestore.instance
//               .collection('chatRooms')
//               .doc(chatRoomId!)
//               .set({
//             "created": FieldValue.serverTimestamp(),
//             // Add other fields to initialize the chat room if needed
//           }).then((_) {
//             print("Chat room created successfully.");
//             // Proceed with updating the last message now that the chat room is created
//             _updateLastMessage(lastMessageInfoMap);
//           }).catchError((e) {
//             print("Error creating chat room: $e");
//           });
//         } else {
//           // Chat room exists, proceed with updating the last message
//           print("Chat room already exists.");
//           _updateLastMessage(lastMessageInfoMap);
//         }
//       }).catchError((e) {
//         print("Error checking chat room: $e");
//       });

//       if (sendClicked) {
//         messageId = null;
//       }
//     }).catchError((e) {
//       print("Error adding message: $e");
//     });
//   }
// }

// void _updateLastMessage(Map<String, dynamic> lastMessageInfoMap) {
//   // Update the last message in the chat room
//   FirebaseFirestore.instance
//       .collection('chatRooms')
//       .doc(chatRoomId!) // Ensure chatRoomId is correct and not null
//       .update(lastMessageInfoMap)
//       .then((_) {
//     print("Last message updated successfully!");
//   }).catchError((e) {
//     print("Error updating last message: $e");
//   });
// }


//   @override
//   void initState() {
//     super.initState();
//     getSharedPref();
//   }

//   // @override
//   // Widget build(BuildContext context) {
//   //   if (loading) {
//   //     return Scaffold(
//   //       backgroundColor: Color(0xFF553370),
//   //       body: Center(
//   //         child: CircularProgressIndicator(
//   //           color: Color(0xffc199cd),
//   //         ),
//   //       ),
//   //     );
//   //   }

//   //   return Scaffold(
//   //     backgroundColor: Color(0xFF553370),
//   //     body: Container(
//   //       margin: EdgeInsets.only(top: 60.0),
//   //       child: Column(
//   //         children: [
//   //           // Header Section
//   //           Padding(
//   //             padding: const EdgeInsets.only(left: 10.0),
//   //             child: Row(
//   //               children: [
//   //                 // Icon(
//   //                 //   Icons.arrow_back_ios_new_outlined,
//   //                 //   color: Color(0xffc199cd),
//   //                 // ),
//   //                 IconButton(
//   //                   icon: Icon(
//   //                     Icons.arrow_back_ios_new_outlined,
//   //                     color: Color(0xffc199cd),
//   //                   ),
//   //                   onPressed: () {
//   //                     // This will pop the current screen off the stack and go back to the previous page
//   //                     Navigator.pop(context);
//   //                   },
//   //                 ),
//   //                 SizedBox(width: 90.0),
//   //                 Text(
//   //                   widget.name,
//   //                   style: TextStyle(
//   //                     color: Color(0xffc199cd),
//   //                     fontSize: 20.0,
//   //                     fontWeight: FontWeight.w500,
//   //                   ),
//   //                 ),
//   //               ],
//   //             ),
//   //           ),
//   //           SizedBox(height: 10.0),
//   //           // Chat Body
//   //           Container(
//   //             padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
//   //             width: MediaQuery.of(context).size.width,
//   //             height: MediaQuery.of(context).size.height / 1.17,
//   //             decoration: BoxDecoration(
//   //               color: Colors.white,
//   //               borderRadius: BorderRadius.only(
//   //                 topLeft: Radius.circular(30),
//   //                 topRight: Radius.circular(30),
//   //               ),
//   //             ),
//   //             child: Column(
//   //               children: [
//   //                 Spacer(),
//   //                 // Input Box
//   //                 Material(
//   //                   elevation: 5.0,
//   //                   borderRadius: BorderRadius.circular(30),
//   //                   child: Container(
//   //                     padding: EdgeInsets.only(left: 10.0),
//   //                     decoration: BoxDecoration(
//   //                       color: Colors.white,
//   //                       borderRadius: BorderRadius.circular(30),
//   //                     ),
//   //                     child: Row(
//   //                       children: [
//   //                         Expanded(
//   //                           child: TextField(
//   //                             controller: messageController,
//   //                             decoration: InputDecoration(
//   //                               border: InputBorder.none,
//   //                               hintText: "Type a message",
//   //                               hintStyle: TextStyle(color: Colors.black45),
//   //                             ),
//   //                           ),
//   //                         ),
//   //                         GestureDetector(
//   //                           onTap: () {
//   //                             addMessage(true);
//   //                           },
//   //                           child: Container(
//   //                             padding: EdgeInsets.all(8),
//   //                             decoration: BoxDecoration(
//   //                               color: Color(0xFFf3f3f3),
//   //                               borderRadius: BorderRadius.circular(50),
//   //                             ),
//   //                             child: Center(
//   //                               child: Icon(
//   //                                 Icons.send,
//   //                                 color: Color.fromARGB(255, 166, 159, 159),
//   //                               ),
//   //                             ),
//   //                           ),
//   //                         ),
//   //                       ],
//   //                     ),
//   //                   ),
//   //                 ),
//   //               ],
//   //             ),
//   //           ),
//   //         ],
//   //       ),
//   //     ),
//   //   );
//   // }



//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       backgroundColor: Color(0xFF553370),
//       body: Container(
//         margin: EdgeInsets.only(top: 60.0),
//         child: Stack(
//           children: [
//             // Header Section
//             Container(
//               margin: EdgeInsets.only(top: 50.0),
//               width: MediaQuery.of(context).size.width,
//               height: MediaQuery.of(context).size.height/1.12,
//               decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.only(topLeft: Radius.circular(30), topRight:  Radius.circular(30), ) ),
//               child: chatMessage()),
//             Padding(
//               padding: const EdgeInsets.only(left: 10.0),
//               child: Row(
//                 children: [
//                     GestureDetector(
//                       onTap: (){
//                      Navigator.pushReplacement(context, MaterialPageRoute(builder:(context)=> Home() ));
//                     },
//                       child: Icon(
//                       Icons.arrow_back_ios_new_outlined,
//                       color: Color(0xffc199cd),
//                     )
//                     ),
//                   SizedBox(width: 90.0),
//                   Text(
//                     widget.name,
//                     style: TextStyle(
//                       color: Color(0xffc199cd),
//                       fontSize: 20.0,
//                       fontWeight: FontWeight.w500,
//                     ),
//                   ),
//                 ],
//               ),
//             ),
//             // SizedBox(height: 24.0),
//             // // Chat Body
//             // Container(
//             //   padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
//             //   width: MediaQuery.of(context).size.width,
//             //   height: MediaQuery.of(context).size.height / 1.14,
//             //   decoration: BoxDecoration(
//             //     color: Colors.white,
//             //     borderRadius: BorderRadius.only(
//             //       topLeft: Radius.circular(30),
//             //       topRight: Radius.circular(30),
//             //     ),
//             //   ),
//             //   child: Column(
//             //     children: [
//             //       // Example received message
//             //       Container(
//             //         padding: EdgeInsets.all(10),
//             //         margin: EdgeInsets.only(left: MediaQuery.of(context).size.width / 2),
//             //         alignment: Alignment.bottomRight,
//             //         decoration: BoxDecoration(
//             //           color: Color.fromARGB(255, 226, 227, 229),
//             //           borderRadius: BorderRadius.only(
//             //             topLeft: Radius.circular(10),
//             //             topRight: Radius.circular(10),
//             //             bottomLeft: Radius.circular(10),
//             //           ),
//             //         ),
//             //         child: Text(
//             //           "Hello, How was the day?",
//             //           style: TextStyle(color: Colors.black, fontSize: 15.0, fontWeight: FontWeight.w500),
//             //         ),
//             //       ),
//             //       // SizedBox(height: 20.0),
//                   // // Example sent message
//                   // Container(
//                   //   padding: EdgeInsets.all(10),
//                   //   margin: EdgeInsets.only(right: MediaQuery.of(context).size.width / 3),
//                   //   alignment: Alignment.topLeft,
//                   //   decoration: BoxDecoration(
//                   //     color: Color.fromARGB(255, 209, 221, 246),
//                   //     borderRadius: BorderRadius.only(
//                   //       bottomRight: Radius.circular(10),
//                   //       topRight: Radius.circular(10),
//                   //       topLeft: Radius.circular(10),
//                   //     ),
//                   //   ),
//                   //   child: Text(
//                   //     "The day was really good",
//                   //     style: TextStyle(color: Colors.black, fontSize: 15.0, fontWeight: FontWeight.w500),
//                   //   ),
//                   // ),
//                   // Spacer(),
//                   // Input Box
//                    SizedBox(height: 10.0),
//                   Container(
//                      padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
//               width: MediaQuery.of(context).size.width,
//               height: MediaQuery.of(context).size.height / 1.17,
//               decoration: BoxDecoration(
//                 color: Colors.white,
//                 borderRadius: BorderRadius.only(
//                   topLeft: Radius.circular(30),
//                   topRight: Radius.circular(30),
//                 ),
//               ),
//                     child: Column(
//                       children: [
//                         Spacer(),
//                         Material(
//                           elevation: 5.0,
//                           borderRadius: BorderRadius.circular(30),
//                           child: Container(
//                             margin: EdgeInsets.only(left: 20.0, right: 20.0, bottom: 10.0),
//                             padding: EdgeInsets.only(left: 10.0),
//                             decoration: BoxDecoration(
//                               color: Colors.white,
//                               borderRadius: BorderRadius.circular(30),
//                             ),
//                             child:
                        
//                               Row(
//                             children: [
//                               Expanded(
//                                 child: TextField(
//                                   controller: messageController,
//                                   decoration: InputDecoration(
//                                     border: InputBorder.none,
//                                     hintText: "Type a message",
//                                     hintStyle: TextStyle(color: Colors.black45),
//                                   ),
//                                 ),
//                               ),
//                               GestureDetector(
//                                 onTap: () {
//                                   addMessage(true);
//                                 },
//                                 child: Container(
//                                   padding: EdgeInsets.all(8),
//                                   decoration: BoxDecoration(
//                                     color: Color(0xFFf3f3f3),
//                                     borderRadius: BorderRadius.circular(50),
//                                   ),
//                                   child: Center(
//                                     child: Icon(
//                                       Icons.send,
//                                       color: Color.fromARGB(255, 166, 159, 159),
//                                     ),
//                                   ),
//                                 ),
//                               ),
//                             ],
//                           ),
//                             ),
//                                            ),
//                       ],
//                     ),
//                   ),
//                 ],
//               ),
//         ),
//     );
//   }
// }




// // import 'package:chatapp/service/database.dart';
// // import 'package:chatapp/service/shared_pref.dart';
// // import 'package:cloud_firestore/cloud_firestore.dart';
// // import 'package:flutter/material.dart';
// // import 'package:intl/intl.dart';
// // import 'package:random_string/random_string.dart';

// // class ChatPage extends StatefulWidget {
// //   final String name;
// //   final String profileurl;
// //   final String username;

// //   ChatPage({
// //     required this.name,
// //     required this.profileurl,
// //     required this.username,
// //   });

// //   @override
// //   State<ChatPage> createState() => _ChatPageState();
// // }

// // class _ChatPageState extends State<ChatPage> {
// //   TextEditingController messageController = TextEditingController();
// //   String? myUserName, myProfilePic, myName, myEmail, messageId, chatRoomId;
// //   bool loading = true; // To manage loader visibility
// //   final SharedPreferenceHelper sharedPrefHelper = SharedPreferenceHelper();

// //   /// Fetch shared preferences data and initialize chat room
// //   Future<void> getSharedPref() async {
// //     try {
// //       myUserName = await sharedPrefHelper.getUserName();
// //       myProfilePic = await sharedPrefHelper.getUserPic();
// //       myName = await sharedPrefHelper.getUserDisplayName();
// //       myEmail = await sharedPrefHelper.getUserEmail();

// //       if (myUserName != null) {
// //         chatRoomId = getChatRoomIdByUsername(widget.username, myUserName!);
// //       }

// //       print("Shared Preferences Loaded:");
// //       print("Username: $myUserName");
// //       print("Profile Pic: $myProfilePic");
// //       print("Name: $myName");
// //       print("Email: $myEmail");
// //       print("Chat Room ID: $chatRoomId");
// //     } catch (e) {
// //       print("Error loading shared preferences: $e");
// //     } finally {
// //       setState(() {
// //         loading = false;
// //       });
// //     }
// //   }

// //   /// Generate consistent chat room ID based on usernames
// //   String getChatRoomIdByUsername(String user1, String user2) {
// //     return user1.compareTo(user2) > 0 ? "$user1\_$user2" : "$user2\_$user1";
// //   }

// //   Future<void> addMessage(bool sendClicked) async {
// //     // Check if messageController has text
// //     if (messageController.text.isNotEmpty) {
// //       String message = messageController.text;
// //       messageController.clear();

// //       // Ensure we have valid data
// //       if (chatRoomId == null || myUserName == null || myProfilePic == null) {
// //         print("Error: chatRoomId, myUserName, or myProfilePic is null");
// //         return; // Exit if any value is null
// //       }

// //       DateTime now = DateTime.now();
// //       String formattedDate = DateFormat('h:mma').format(now);

// //       Map<String, dynamic> messageInfoMap = {
// //         "message": message,
// //         "sendby": myUserName,
// //         "ts": formattedDate,
// //         "time": FieldValue.serverTimestamp(),
// //         "imgUrl": myProfilePic,
// //       };

// //       print("Sending message: $messageInfoMap");

// //       messageId ??= randomAlphaNumeric(10);

// //       try {
// //         // Send message to Firestore
// //         await DatabaseMethods().addMessage(chatRoomId!, messageId!, messageInfoMap);
// //         print("Message added successfully!");

// //         Map<String, dynamic> lastMessageInfoMap = {
// //           "lastMessage": message,
// //           "lastMessageSendTs": formattedDate,
// //           "time": FieldValue.serverTimestamp(),
// //           "lastMessageSendBy": myUserName,
// //         };

// //         DocumentSnapshot chatRoomSnapshot = await FirebaseFirestore.instance.collection('chatRooms').doc(chatRoomId!).get();

// //         if (!chatRoomSnapshot.exists) {
// //           await FirebaseFirestore.instance.collection('chatRooms').doc(chatRoomId!).set({
// //             "created": FieldValue.serverTimestamp(),
// //           });
// //           print("Chat room created successfully.");
// //         }

// //         await _updateLastMessage(lastMessageInfoMap);

// //         if (sendClicked) {
// //           messageId = null;
// //         }
// //       } catch (e) {
// //         print("Error: $e");
// //       }
// //     }
// //   }

// //   Future<void> _updateLastMessage(Map<String, dynamic> lastMessageInfoMap) async {
// //     try {
// //       await DatabaseMethods().updateLastMessageSend(chatRoomId!, lastMessageInfoMap);
// //       print("Last message updated successfully!");
// //     } catch (e) {
// //       print("Error updating last message: $e");
// //     }
// //   }

// //   @override
// //   void initState() {
// //     super.initState();
// //     getSharedPref();
// //   }

// //   @override
// //   Widget build(BuildContext context) {
// //     // Loading state until shared preferences are fetched
// //     if (loading) {
// //       return Scaffold(
// //         backgroundColor: Color(0xFF553370),
// //         body: Center(
// //           child: CircularProgressIndicator(
// //             color: Color(0xffc199cd),
// //           ),
// //         ),
// //       );
// //     }

// //     // Ensure we have valid data before displaying the chat page
// //     if (myUserName == null || chatRoomId == null) {
// //       return Scaffold(
// //         body: Center(
// //           child: Text("Error: User or Chat Room not initialized"),
// //         ),
// //       );
// //     }

// //     return Scaffold(
// //       backgroundColor: Color(0xFF553370),
// //       body: Container(
// //         margin: EdgeInsets.only(top: 60.0),
// //         child: Column(
// //           children: [
// //             // Header Section
// //             Padding(
// //               padding: const EdgeInsets.only(left: 10.0),
// //               child: Row(
// //                 children: [
// //                   Icon(
// //                     Icons.arrow_back_ios_new_outlined,
// //                     color: Color(0xffc199cd),
// //                   ),
// //                   SizedBox(width: 90.0),
// //                   Text(
// //                     widget.name,
// //                     style: TextStyle(
// //                       color: Color(0xffc199cd),
// //                       fontSize: 20.0,
// //                       fontWeight: FontWeight.w500,
// //                     ),
// //                   ),
// //                 ],
// //               ),
// //             ),
// //             SizedBox(height: 24.0),
// //             // Chat Body
// //             Container(
// //               padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
// //               width: MediaQuery.of(context).size.width,
// //               height: MediaQuery.of(context).size.height / 1.14,
// //               decoration: BoxDecoration(
// //                 color: Colors.white,
// //                 borderRadius: BorderRadius.only(
// //                   topLeft: Radius.circular(30),
// //                   topRight: Radius.circular(30),
// //                 ),
// //               ),
// //               child: Column(
// //                 children: [
// //                   Spacer(),
// //                   // Input Box
// //                   Material(
// //                     elevation: 5.0,
// //                     borderRadius: BorderRadius.circular(30),
// //                     child: Container(
// //                       padding: EdgeInsets.only(left: 10.0),
// //                       decoration: BoxDecoration(
// //                         color: Colors.white,
// //                         borderRadius: BorderRadius.circular(30),
// //                       ),
// //                       child: Row(
// //                         children: [
// //                           Expanded(
// //                             child: TextField(
// //                               controller: messageController,
// //                               decoration: InputDecoration(
// //                                 border: InputBorder.none,
// //                                 hintText: "Type a message",
// //                                 hintStyle: TextStyle(color: Colors.black45),
// //                               ),
// //                             ),
// //                           ),
// //                           GestureDetector(
// //                             onTap: () {
// //                               addMessage(true);
// //                             },
// //                             child: Container(
// //                               padding: EdgeInsets.all(8),
// //                               decoration: BoxDecoration(
// //                                 color: Color(0xFFf3f3f3),
// //                                 borderRadius: BorderRadius.circular(50),
// //                               ),
// //                               child: Center(
// //                                 child: Icon(
// //                                   Icons.send,
// //                                   color: Color.fromARGB(255, 166, 159, 159),
// //                                 ),
// //                               ),
// //                             ),
// //                           ),
// //                         ],
// //                       ),
// //                     ),
// //                   ),
// //                 ],
// //               ),
// //             ),
// //           ],
// //         ),
// //       ),
// //     );
// //   }
// // }


//----firebase- rules--

// rules_version = '2';

// service cloud.firestore {
//   match /databases/{database}/documents {
//     match /{document=**} {
//       allow read, write: if true;
//     }
//   }
// }


//----chatpage -commented code
// import 'package:chatapp/pages/home.dart';
// import 'package:chatapp/service/database.dart';
// import 'package:chatapp/service/shared_pref.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// //import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:flutter/material.dart';
// import 'package:intl/intl.dart';
// import 'package:random_string/random_string.dart';

// class ChatPage extends StatefulWidget {
//   final String name;
//   final String profileurl;
//   final String username;

//   ChatPage({
//     required this.name,
//     required this.profileurl,
//     required this.username,
//   });

//   @override
//   State<ChatPage> createState() => _ChatPageState();
// }

// class _ChatPageState extends State<ChatPage> {
//   TextEditingController messageController = TextEditingController();
//   String? myUserName, myProfilePic, myName, myEmail, messageId, chatRoomId;
//   bool loading = true; // To manage loader visibility
//   final SharedPreferenceHelper sharedPrefHelper = SharedPreferenceHelper();
//   Stream? messageStream;

//   /// Fetch shared preferences data and initialize chat room
//   Future<void> getSharedPref() async {
//     try {
//       myUserName = await sharedPrefHelper.getUserName();
//       myProfilePic = await sharedPrefHelper.getUserPic();
//       myName = await sharedPrefHelper.getUserDisplayName();
//       myEmail = await sharedPrefHelper.getUserEmail();

//       chatRoomId = getChatRoomIdByUsername(widget.username, myUserName!);

//       print("Shared Preferences Loaded:");
//       print("Username: $myUserName");
//       print("Profile Pic: $myProfilePic");
//       print("Name: $myName");
//       print("Email: $myEmail");
//       print("Chat Room ID: $chatRoomId");
//     } catch (e) {
//       print("Error loading shared preferences: $e");
//     } finally {
//       setState(() {
//         loading = false;
//       });
//     }
//   }

//   /// Generate consistent chat room ID based on usernames
//   String getChatRoomIdByUsername(String user1, String user2) {
//     return user1.compareTo(user2) > 0 ? "$user1\_$user2" : "$user2\_$user1";
//   }

//   getAndSetMessages() async {
//     messageStream = await DatabaseMethods().getChatRoomMessages(chatRoomId!);
//     setState(() {});
//   }

//   Widget chatMessage() {
//     return StreamBuilder(
//         stream: messageStream,
//         builder: (context, AsyncSnapshot snapshot) {
//           return snapshot.hasData
//               ? ListView.builder(
//                   padding: EdgeInsets.only(bottom: 90.0, top: 130),
//                   itemCount: snapshot.data.docs.length,
//                   reverse: true,
//                   itemBuilder: (context, index) {
//                     DocumentSnapshot ds = snapshot.data.docs[index];
//                     return chatMessageTile(
//                         ds["message"], myUserName == ds["sendBy"]);
//                   })
//               : Center(
//                   child: CircularProgressIndicator(),
//                 );
//         });
//   }

//   Widget chatMessageTile(String message, bool sendByMe) {
//     return Row(
//       mainAxisAlignment:
//           sendByMe ? MainAxisAlignment.end : MainAxisAlignment.start,
//       children: [
//         Flexible(
//           child: Container(
//             padding: EdgeInsets.all(16),
//             margin: EdgeInsets.symmetric(horizontal: 16, vertical: 4),
//             decoration: BoxDecoration(
//                 borderRadius: BorderRadius.only(
//                     topLeft: Radius.circular(24),
//                     bottomRight:
//                         sendByMe ? Radius.circular(0) : Radius.circular(24),
//                     topRight: Radius.circular(24),
//                     bottomLeft:
//                         sendByMe ? Radius.circular(24) : Radius.circular(0)),
//                 color: sendByMe
//                     ? Color.fromARGB(255, 234, 236, 240)
//                     : Color.fromARGB(255, 211, 228, 243)),
//             child: Text(
//               message,
//               style: TextStyle(
//                   color: Colors.black,
//                   fontSize: 15.0,
//                   fontWeight: FontWeight.w500),
//             ),
//           ),
//         )
//       ],
//     );
//   }

//   void addMessage(bool sendClicked) {
//     if (messageController.text.isNotEmpty) {
//       String message = messageController.text;
//       messageController.clear();

//       DateTime now = DateTime.now();
//       String formattedDate = DateFormat('h:mma').format(now);

//       Map<String, dynamic> messageInfoMap = {
//         "message": message,
//         "sendby": myUserName,
//         "ts": formattedDate,
//         "time": FieldValue.serverTimestamp(),
//         "imgUrl": myProfilePic,
//       };

//       print("Sending message: $messageInfoMap");

//       messageId ??= randomAlphaNumeric(10);

//       // Add the message to Firestore
//       DatabaseMethods()
//           .addMessage(chatRoomId!, messageId!, messageInfoMap)
//           .then((_) {
//         print("Message added successfully!");

//         Map<String, dynamic> lastMessageInfoMap = {
//           "lastMessage": message,
//           "lastMessageSendTs": formattedDate,
//           "time": FieldValue.serverTimestamp(),
//           "lastMessageSendBy": myUserName,
//         };

//         // Ensure the chat room exists
//         FirebaseFirestore.instance
//             .collection('chatRooms')
//             .doc(chatRoomId!)
//             .get()
//             .then((docSnapshot) {
//           if (!docSnapshot.exists) {
//             // Chat room doesn't exist, create it
//             FirebaseFirestore.instance
//                 .collection('chatRooms')
//                 .doc(chatRoomId!)
//                 .set({
//               "created": FieldValue.serverTimestamp(),
//               // Add other fields to initialize the chat room if needed
//             }).then((_) {
//               print("Chat room created successfully.");
//               // Proceed with updating the last message now that the chat room is created
//               _updateLastMessage(lastMessageInfoMap);
//             }).catchError((e) {
//               print("Error creating chat room: $e");
//             });
//           } else {
//             // Chat room exists, proceed with updating the last message
//             print("Chat room already exists.");
//             _updateLastMessage(lastMessageInfoMap);
//           }
//         }).catchError((e) {
//           print("Error checking chat room: $e");
//         });

//         if (sendClicked) {
//           messageId = null;
//         }
//       }).catchError((e) {
//         print("Error adding message: $e");
//       });
//     }
//   }

//   void _updateLastMessage(Map<String, dynamic> lastMessageInfoMap) {
//     // Update the last message in the chat room
//     FirebaseFirestore.instance
//         .collection('chatRooms')
//         .doc(chatRoomId!) // Ensure chatRoomId is correct and not null
//         .update(lastMessageInfoMap)
//         .then((_) {
//       print("Last message updated successfully!");
//     }).catchError((e) {
//       print("Error updating last message: $e");
//     });
//   }

//   @override
//   void initState() {
//     super.initState();
//     getSharedPref();
//   }

//   // @override
//   // Widget build(BuildContext context) {
//   //   if (loading) {
//   //     return Scaffold(
//   //       backgroundColor: Color(0xFF553370),
//   //       body: Center(
//   //         child: CircularProgressIndicator(
//   //           color: Color(0xffc199cd),
//   //         ),
//   //       ),
//   //     );
//   //   }

//   //   return Scaffold(
//   //     backgroundColor: Color(0xFF553370),
//   //     body: Container(
//   //       margin: EdgeInsets.only(top: 60.0),
//   //       child: Column(
//   //         children: [
//   //           // Header Section
//   //           Padding(
//   //             padding: const EdgeInsets.only(left: 10.0),
//   //             child: Row(
//   //               children: [
//   //                 // Icon(
//   //                 //   Icons.arrow_back_ios_new_outlined,
//   //                 //   color: Color(0xffc199cd),
//   //                 // ),
//   //                 IconButton(
//   //                   icon: Icon(
//   //                     Icons.arrow_back_ios_new_outlined,
//   //                     color: Color(0xffc199cd),
//   //                   ),
//   //                   onPressed: () {
//   //                     // This will pop the current screen off the stack and go back to the previous page
//   //                     Navigator.pop(context);
//   //                   },
//   //                 ),
//   //                 SizedBox(width: 90.0),
//   //                 Text(
//   //                   widget.name,
//   //                   style: TextStyle(
//   //                     color: Color(0xffc199cd),
//   //                     fontSize: 20.0,
//   //                     fontWeight: FontWeight.w500,
//   //                   ),
//   //                 ),
//   //               ],
//   //             ),
//   //           ),
//   //           SizedBox(height: 10.0),
//   //           // Chat Body
//   //           Container(
//   //             padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
//   //             width: MediaQuery.of(context).size.width,
//   //             height: MediaQuery.of(context).size.height / 1.17,
//   //             decoration: BoxDecoration(
//   //               color: Colors.white,
//   //               borderRadius: BorderRadius.only(
//   //                 topLeft: Radius.circular(30),
//   //                 topRight: Radius.circular(30),
//   //               ),
//   //             ),
//   //             child: Column(
//   //               children: [
//   //                 Spacer(),
//   //                 // Input Box
//   //                 Material(
//   //                   elevation: 5.0,
//   //                   borderRadius: BorderRadius.circular(30),
//   //                   child: Container(
//   //                     padding: EdgeInsets.only(left: 10.0),
//   //                     decoration: BoxDecoration(
//   //                       color: Colors.white,
//   //                       borderRadius: BorderRadius.circular(30),
//   //                     ),
//   //                     child: Row(
//   //                       children: [
//   //                         Expanded(
//   //                           child: TextField(
//   //                             controller: messageController,
//   //                             decoration: InputDecoration(
//   //                               border: InputBorder.none,
//   //                               hintText: "Type a message",
//   //                               hintStyle: TextStyle(color: Colors.black45),
//   //                             ),
//   //                           ),
//   //                         ),
//   //                         GestureDetector(
//   //                           onTap: () {
//   //                             addMessage(true);
//   //                           },
//   //                           child: Container(
//   //                             padding: EdgeInsets.all(8),
//   //                             decoration: BoxDecoration(
//   //                               color: Color(0xFFf3f3f3),
//   //                               borderRadius: BorderRadius.circular(50),
//   //                             ),
//   //                             child: Center(
//   //                               child: Icon(
//   //                                 Icons.send,
//   //                                 color: Color.fromARGB(255, 166, 159, 159),
//   //                               ),
//   //                             ),
//   //                           ),
//   //                         ),
//   //                       ],
//   //                     ),
//   //                   ),
//   //                 ),
//   //               ],
//   //             ),
//   //           ),
//   //         ],
//   //       ),
//   //     ),
//   //   );
//   // }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       backgroundColor: Color(0xFF553370),
//       body: Container(
//         margin: EdgeInsets.only(top: 60.0),
//         child: Stack(
//           children: [
//             // Header Section
//             Container(
//                 margin: EdgeInsets.only(top: 50.0),
//                 width: MediaQuery.of(context).size.width,
//                 height: MediaQuery.of(context).size.height / 1.12,
//                 decoration: BoxDecoration(
//                     color: Colors.white,
//                     borderRadius: BorderRadius.only(
//                       topLeft: Radius.circular(30),
//                       topRight: Radius.circular(30),
//                     )),
//                 child: chatMessage()),
//             Padding(
//               padding: const EdgeInsets.only(left: 10.0),
//               child: Row(
//                 children: [
//                   GestureDetector(
//                       onTap: () {
//                         Navigator.pushReplacement(context,
//                             MaterialPageRoute(builder: (context) => Home()));
//                       },
//                       child: Icon(
//                         Icons.arrow_back_ios_new_outlined,
//                         color: Color(0xffc199cd),
//                       )),
//                   SizedBox(width: 90.0),
//                   Text(
//                     widget.name,
//                     style: TextStyle(
//                       color: Color(0xffc199cd),
//                       fontSize: 20.0,
//                       fontWeight: FontWeight.w500,
//                     ),
//                   ),
//                 ],
//               ),
//             ),

//             SizedBox(height: 10.0),
//             Container(
//               padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 50.0),
//               width: MediaQuery.of(context).size.width,
//               height: MediaQuery.of(context).size.height / 1.17,
//               decoration: BoxDecoration(
//                 color: Colors.white,
//                 borderRadius: BorderRadius.only(
//                   topLeft: Radius.circular(30),
//                   topRight: Radius.circular(30),
//                 ),
//               ),
//               child: Column(
//                 children: [
//                   Spacer(),
//                   Material(
//                     elevation: 5.0,
//                     borderRadius: BorderRadius.circular(30),
//                     child: Container(
//                       margin: EdgeInsets.only(
//                           left: 20.0, right: 20.0, bottom: 10.0),
//                       padding: EdgeInsets.only(left: 10.0),
//                       decoration: BoxDecoration(
//                         color: Colors.white,
//                         borderRadius: BorderRadius.circular(30),
//                       ),
//                       child: Row(
//                         children: [
//                           Expanded(
//                             child: TextField(
//                               controller: messageController,
//                               decoration: InputDecoration(
//                                 border: InputBorder.none,
//                                 hintText: "Type a message",
//                                 hintStyle: TextStyle(color: Colors.black45),
//                               ),
//                             ),
//                           ),
//                           GestureDetector(
//                             onTap: () {
//                               addMessage(true);
//                             },
//                             child: Container(
//                               padding: EdgeInsets.all(8),
//                               decoration: BoxDecoration(
//                                 color: Color(0xFFf3f3f3),
//                                 borderRadius: BorderRadius.circular(50),
//                               ),
//                               child: Center(
//                                 child: Icon(
//                                   Icons.send,
//                                   color: Color.fromARGB(255, 166, 159, 159),
//                                 ),
//                               ),
//                             ),
//                           ),
//                         ],
//                       ),
//                     ),
//                   ),
//                 ],
//               ),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }

//-----home.dart--comment code
// // import 'package:chatapp/pages/chatpage.dart';
// // import 'package:chatapp/service/database.dart';
// // import 'package:chatapp/service/shared_pref.dart';
// // import 'package:cloud_firestore/cloud_firestore.dart';
// // import 'package:flutter/material.dart';

// // class Home extends StatefulWidget {
// //   const Home({super.key});

// //   @override
// //   State<Home> createState() => _HomeState();
// // }

// // class _HomeState extends State<Home> {
// //   bool search = false;

// //   //---separate user chatrrom
// //   String? myName, myProfilePic, myUserName, myEmail;

// //   Stream? chatRoomStream;

// //   getthesharedpref() async {
// //     myName = await SharedPreferenceHelper().getUserDisplayName();
// //     myProfilePic = await SharedPreferenceHelper().getUserPic();
// //     myUserName = await SharedPreferenceHelper().getUserName();
// //     myEmail = await SharedPreferenceHelper().getUserEmail();

// //     print("my name: ${ myName}");
// //     setState(() {});
// //   }

// //   ontheload() async {
// //     await getthesharedpref();
// //     chatRoomStream = await DatabaseMethods().getChatRooms();
// //     setState(() {});
// //   }

// //   Widget ChatRoomList() {
// //     return StreamBuilder(
// //         stream: chatRoomStream,
// //         builder: (context, AsyncSnapshot snapshot) {
// //           return snapshot.hasData
// //               ? ListView.builder(
// //                   padding: EdgeInsets.zero,
// //                   itemCount: snapshot.data.docs.length,
// //                   shrinkWrap: true,
// //                   itemBuilder: (context, index) {
// //                     DocumentSnapshot ds = snapshot.data.doc.length;
// //                     return ChatRoomListTile(
// //                         chatRoomId: ds.id,
// //                         lastMessaage: ds["lastMessaage"],
// //                         myUserName: myUserName!,
// //                         time: ds["lastMessageSendTs"]);
// //                   })
// //               : Center(
// //                   child: CircularProgressIndicator(),
// //                 );
// //         });
// //   }

// //   @override
// //   void initState() {
// //     super.initState();
// //      print("my name: ");
// //     ontheload();
// //   }

// //   getChatRoomIdbyUsername(String a, String b) {
// //     if (a.substring(0, 1).codeUnitAt(0) > b.substring(0, 1).codeUnitAt(0)) {
// //       return "$b\_$a";
// //     } else {
// //       return "$a\_$b";
// //     }
// //   }
// // //-----

// //   var queryResultSet = [];
// //   var tempSearchStore = [];

// //   initiateSearch(value) {
// //     if (value.length == 0) {
// //       setState(() {
// //         queryResultSet = [];
// //         tempSearchStore = [];
// //       });
// //     }
// //     setState(() {
// //       search = true;
// //     });
// //     var capitalizedValue =
// //         value.substring(0, 1).toUpperCase() + value.substring(1);
// //     if (queryResultSet.isEmpty && value.length == 1) {
// //       DatabaseMethods().searchUsers(value).then((QuerySnapshot docs) {
// //         for (int i = 0; i < docs.docs.length; ++i) {
// //           queryResultSet.add(docs.docs[i].data());
// //         }
// //       });
// //     } else {
// //       tempSearchStore = [];
// //       queryResultSet.forEach((element) {
// //         if (element['username'].startsWith(capitalizedValue)) {
// //           setState(() {
// //             tempSearchStore.add(element);
// //           });
// //         }
// //       });
// //     }
// //   }

// // //1:56:40
// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //       backgroundColor: Color(0xFF553370),
// //       body: Container(
// //         // margin: EdgeInsets.symmetric(vertical: 50.0, horizontal: 20.0),
// //         child: Column(
// //           children: [
// //             Padding(
// //               padding: const EdgeInsets.only(
// //                   left: 20.0, right: 20.0, top: 50.0, bottom: 20.0),
// //               child: Row(
// //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// //                 children: [
// //                   search
// //                       ? Expanded(
// //                           child: TextField(
// //                           onChanged: (value) {
// //                             initiateSearch(value.toUpperCase());
// //                           },
// //                           decoration: InputDecoration(
// //                               border: InputBorder.none,
// //                               hintText: 'Search User',
// //                               hintStyle: TextStyle(
// //                                   color: Colors.black,
// //                                   fontSize: 20.0,
// //                                   fontWeight: FontWeight.w500)),
// //                           style: TextStyle(
// //                               color: Colors.black,
// //                               fontSize: 18.0,
// //                               fontWeight: FontWeight.w500),
// //                         ))
// //                       : Text(
// //                           "ChatUp",
// //                           style: TextStyle(
// //                               color: Color(0xffc199cd),
// //                               fontSize: 22.0,
// //                               fontWeight: FontWeight.bold),
// //                         ),
// //                   GestureDetector(
// //                     onTap: () {
// //                       search = true;
// //                       setState(() {});
// //                     },
// //                     child: Container(
// //                         padding: EdgeInsets.all(6),
// //                         decoration: BoxDecoration(
// //                             color: Color(0xFF3a2144),
// //                             borderRadius: BorderRadius.circular(20)),
// //                         child: search
// //                             ? GestureDetector(
// //                                 onTap: () {
// //                                   search = false;
// //                                   setState(() {});
// //                                 },
// //                                 child: Icon(
// //                                   Icons.close,
// //                                   color: Color(0xffc199cd),
// //                                 ),
// //                               )
// //                             : Icon(
// //                                 Icons.search,
// //                                 color: Color(0xffc199cd),
// //                               )),
// //                   )
// //                 ],
// //               ),
// //             ),
// //             Container(
// //               padding: EdgeInsets.symmetric(vertical: 30.0, horizontal: 20.0),
// //               width: MediaQuery.of(context).size.width,
// //               height: search
// //                   ? MediaQuery.of(context).size.height / 1.19
// //                   : MediaQuery.of(context).size.height / 1.13,
// //               decoration: BoxDecoration(
// //                   color: Colors.white,
// //                   borderRadius: BorderRadius.only(
// //                       topLeft: Radius.circular(20),
// //                       topRight: Radius.circular(20))),
// //               child: Column(
// //                 children: [
// //                   search
// //                       ? ListView(
// //                           padding: EdgeInsets.only(left: 10.0, right: 10.0),
// //                           primary: false,
// //                           shrinkWrap: true,
// //                           children: tempSearchStore.map((element) {
// //                             return buildResultCard(element);
// //                           }).toList())
// //                       : ChatRoomList(),
// //                   //  ): Column(
// //                   //     children: [
// //                   //       GestureDetector(
// //                   //         onTap: (){
// //                   //           Navigator.push(context, MaterialPageRoute(builder: (context) => ChatPage()));
// //                   //         },
// //                   // child: Row(
// //                   //   crossAxisAlignment: CrossAxisAlignment.start,
// //                   //   children: [
// //                   //   ClipRRect(
// //                   //     borderRadius: BorderRadius.circular(60),
// //                   //     child: Image.asset("images/girl2.jpg", height: 70, width: 70, fit: BoxFit.cover,)),
// //                   //     SizedBox(width: 20.0,),
// //                   //           Column(
// //                   //             crossAxisAlignment: CrossAxisAlignment.start,
// //                   //             children: [
// //                   //             SizedBox(height: 10.0,),
// //                   //               Row(
// //                   //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// //                   //                 children: [
// //                   //                   Text("Bharti Sahu", style: TextStyle(color: Colors.black, fontSize: 17.0, fontWeight: FontWeight.w500)),
// //                   //                 ],
// //                   //               ),
// //                   //             Text("Hello, what are you doing?", style: TextStyle(color: Colors.black45, fontSize: 15.0, fontWeight: FontWeight.w500)),
// //                   //             ],
// //                   //           ),
// //                   //           Spacer(),
// //                   //           Text("04:30 PM", style: TextStyle(color: Colors.black45, fontSize: 14.0, fontWeight: FontWeight.w500)),

// //                   //       ],),
// //                   //     ),

// //                   // SizedBox(height: 30.0),
// //                   // Row(
// //                   //   crossAxisAlignment: CrossAxisAlignment.start,
// //                   //   children: [
// //                   //   ClipRRect(
// //                   //     borderRadius: BorderRadius.circular(60),
// //                   //     child: Image.asset("images/girl.jpg", height: 70, width: 70, fit: BoxFit.cover,)),
// //                   //     SizedBox(width: 20.0,),
// //                   //     Column(
// //                   //       crossAxisAlignment: CrossAxisAlignment.start,
// //                   //       children: [
// //                   //       SizedBox(height: 10.0,),
// //                   //         Row(
// //                   //           mainAxisAlignment: MainAxisAlignment.spaceBetween,
// //                   //           children: [
// //                   //             Text("Leena Sahu", style: TextStyle(color: Colors.black, fontSize: 17.0, fontWeight: FontWeight.w500)),
// //                   //           ],
// //                   //         ),
// //                   //       Text("Hii, what is goin on?", style: TextStyle(color: Colors.black45, fontSize: 15.0, fontWeight: FontWeight.w500)),
// //                   //       ],
// //                   //     ),
// //                   //     Spacer(),
// //                   //     Text("04:30 PM", style: TextStyle(color: Colors.black45, fontSize: 14.0, fontWeight: FontWeight.w500)),

// //                   //  ],),
// //                   //   ],
// //                   // ),
// //                 ],
// //               ),
// //             ),
// //           ],
// //         ),
// //       ),
// //     );
// //   }

// //   Widget buildResultCard(data) {
// //     return GestureDetector(
// //       onTap: () async {
// //         print("Tapped on user: ${data['username']}");
// //         search = false;
// //         setState(() {});

// //         //separate user chatroom
// //         var chatRoomId = getChatRoomIdbyUsername(myUserName!, data["username"]);

// //         print("Chat Room ID: $chatRoomId");
// //         Map<String, dynamic> chatRoomInfoMap = {
// //           "users": [myUserName, data["username"]],
// //         };
// //         await DatabaseMethods().createChatRoom(chatRoomId, chatRoomInfoMap);
// //         Navigator.push(
// //             context,
// //             MaterialPageRoute(
// //                 builder: (context) => ChatPage(
// //                       name: data["Name"],
// //                       profileurl: data["Photo"],
// //                       username: data["username"],
// //                     )));
// //       },
// //       //------
// //       child: Container(
// //         margin: EdgeInsets.symmetric(vertical: 8),
// //         child: Material(
// //           elevation: 5.0,
// //           borderRadius: BorderRadius.circular(8),
// //           child: Container(
// //             padding: EdgeInsets.all(18),
// //             decoration: BoxDecoration(
// //               color: Colors.white,
// //               borderRadius: BorderRadius.circular(10),
// //             ),
// //             child: Row(
// //               children: [
// //                 ClipRRect(
// //                     borderRadius: BorderRadius.circular(60),
// //                     child: Image.network(
// //                       data["Photo"],
// //                       height: 70,
// //                       width: 70,
// //                       fit: BoxFit.cover,
// //                     )),
// //                 SizedBox(width: 20.0),
// //                 Column(
// //                   crossAxisAlignment: CrossAxisAlignment.start,
// //                   children: [
// //                     Text(
// //                       data["Name"],
// //                       style: TextStyle(
// //                           color: Colors.black,
// //                           fontWeight: FontWeight.bold,
// //                           fontSize: 18.0),
// //                     ),
// //                     SizedBox(
// //                       height: 8.0,
// //                     ),
// //                     Text(
// //                       data["username"],
// //                       style: TextStyle(
// //                           color: Colors.black,
// //                           fontWeight: FontWeight.w500,
// //                           fontSize: 18.0),
// //                     )
// //                   ],
// //                 )
// //               ],
// //             ),
// //           ),
// //         ),
// //       ),
// //     );
// //   }
// // }

// // class ChatRoomListTile extends StatefulWidget {
// //   final String lastMessaage, chatRoomId, myUserName, time;
// //   ChatRoomListTile(
// //       {required this.chatRoomId,
// //       required this.lastMessaage,
// //       required this.myUserName,
// //       required this.time});

// //   @override
// //   State<ChatRoomListTile> createState() => _ChatRoomListTileState();
// // }

// // class _ChatRoomListTileState extends State<ChatRoomListTile> {
// //   String profilePicUrl = "", name = "", username = "", id = "";

// //   getthisUserInfo() async {
// //     username =
// //         widget.chatRoomId.replaceAll("_", "").replaceAll(widget.myUserName, "");
// //     QuerySnapshot querySnapshot =
// //         await DatabaseMethods().getUserInfo(username.toUpperCase());
// //     name = "${querySnapshot.docs[0]["Name"]}";
// //     profilePicUrl = "${querySnapshot.docs[0]["Photo"]}";
// //     id = "${querySnapshot.docs[0]["Id"]}";
// //     setState(() {});
// //   }

// //   @override
// //   void initState() {
// //     getthisUserInfo();
// //     super.initState();
// //   }

// //   @override
// //   Widget build(BuildContext context) {
// //     return Container(
// //       margin: EdgeInsets.symmetric(horizontal: 20.0, vertical: 20.0),
// //       child: Row(
// //         crossAxisAlignment: CrossAxisAlignment.start,
// //         children: [
// //           profilePicUrl == ""
// //               ? CircularProgressIndicator()
// //               : ClipRRect(
// //                   borderRadius: BorderRadius.circular(60),
// //                   child: Image.network(
// //                     profilePicUrl,
// //                     height: 70,
// //                     width: 70,
// //                     fit: BoxFit.cover,
// //                   )),
// //           SizedBox(
// //             width: 20.0,
// //           ),
// //           Column(
// //             crossAxisAlignment: CrossAxisAlignment.start,
// //             children: [
// //               SizedBox(
// //                 height: 10.0,
// //               ),
// //               Row(
// //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// //                 children: [
// //                   Text(username,
// //                       style: TextStyle(
// //                           color: Colors.black,
// //                           fontSize: 17.0,
// //                           fontWeight: FontWeight.w500)),
// //                 ],
// //               ),
// //               Container(
// //                   width: MediaQuery.of(context).size.width / 2,
// //                   child: Text(widget.lastMessaage,
// //                       overflow: TextOverflow.ellipsis,
// //                       style: TextStyle(
// //                           color: Colors.black45,
// //                           fontSize: 15.0,
// //                           fontWeight: FontWeight.w500))),
// //             ],
// //           ),
// //           Spacer(),
// //           Text(widget.time,
// //               style: TextStyle(
// //                   color: Colors.black45,
// //                   fontSize: 14.0,
// //                   fontWeight: FontWeight.w500)),
// //         ],
// //       ),
// //     );
// //   }
// // }

// // // import 'package:chatapp/pages/chatpage.dart';
// // // import 'package:chatapp/service/database.dart';
// // // import 'package:chatapp/service/shared_pref.dart';
// // // import 'package:cloud_firestore/cloud_firestore.dart';
// // // import 'package:flutter/material.dart';

// // // class Home extends StatefulWidget {
// // //   const Home({super.key});

// // //   @override
// // //   State<Home> createState() => _HomeState();
// // // }

// // // class _HomeState extends State<Home> {
// // //   bool search = false;

// // //   //---separate user chatroom
// // //   String? myName, myProfilePic, myUserName, myEmail;

// // //   Stream? chatRoomStream;

// // //   // Initialize the shared preferences and fetch user data
// // //   getthesharedpref() async {
// // //     myName = await SharedPreferenceHelper().getUserDisplayName();
// // //     myProfilePic = await SharedPreferenceHelper().getUserPic();
// // //     myUserName = await SharedPreferenceHelper().getUserName();
// // //     myEmail = await SharedPreferenceHelper().getUserEmail();

// // //     if (myUserName != null) {
// // //       setState(() {}); // Update UI if myUserName is fetched
// // //     } else {
// // //       print("Error: myUserName is null");
// // //     }
// // //   }

// // //   // Fetch chat rooms after loading user data
// // //   // ontheload() async {
// // //   //   await getthesharedpref();
// // //   //   chatRoomStream = await DatabaseMethods().getChatRooms(myUserName!);
// // //   //   setState(() {});
// // //   // }

// // //   ontheload() async {
// // //     await getthesharedpref();
// // //     try {
// // //       // Await the future to get the stream and assign it to chatRoomStream
// // //       chatRoomStream = await DatabaseMethods().getChatRooms(myUserName!);
// // //       setState(() {});
// // //     } catch (e) {
// // //       print("Error in ontheload: $e");
// // //     }
// // //   }

// // //   // Create a chat room ID based on the usernames
// // //   getChatRoomIdbyUsername(String a, String b) {
// // //     if (a.substring(0, 1).codeUnitAt(0) > b.substring(0, 1).codeUnitAt(0)) {
// // //       return "$b\_$a";
// // //     } else {
// // //       return "$a\_$b";
// // //     }
// // //   }

// // //   // Search related variables
// // //   var queryResultSet = [];
// // //   var tempSearchStore = [];

// // //   // Initiate the search based on user input
// // //   initiateSearch(value) {
// // //     if (value.length == 0) {
// // //       setState(() {
// // //         queryResultSet = [];
// // //         tempSearchStore = [];
// // //       });
// // //     }
// // //     setState(() {
// // //       search = true;
// // //     });

// // //     var capitalizedValue =
// // //         value.substring(0, 1).toUpperCase() + value.substring(1);

// // //     if (queryResultSet.isEmpty && value.length == 1) {
// // //       DatabaseMethods().Search(value).then((QuerySnapshot docs) {
// // //         for (int i = 0; i < docs.docs.length; ++i) {
// // //           queryResultSet.add(docs.docs[i].data());
// // //         }
// // //         setState(() {});
// // //       });
// // //     } else {
// // //       tempSearchStore = [];
// // //       queryResultSet.forEach((element) {
// // //         if (element['username'].startsWith(capitalizedValue)) {
// // //           setState(() {
// // //             tempSearchStore.add(element);
// // //           });
// // //         }
// // //       });
// // //     }
// // //   }

// // //   @override
// // //   void initState() {
// // //     super.initState();
// // //     ontheload();
// // //   }

// // //   // Build the chat room list view
// // //   Widget ChatRoomList() {
// // //     return StreamBuilder(
// // //       stream: chatRoomStream,
// // //       builder: (context, AsyncSnapshot snapshot) {
// // //         if (snapshot.connectionState == ConnectionState.waiting) {
// // //           return Center(child: CircularProgressIndicator());
// // //         } else if (snapshot.hasError) {
// // //           print("Error: ${snapshot.error}");
// // //           return Center(child: Text('Error loading chat rooms'));
// // //         } else if (snapshot.hasData) {
// // //           if (snapshot.data.docs.isEmpty) {
// // //             return Center(child: Text('No chat rooms available'));
// // //           }
// // //           return ListView.builder(
// // //             itemCount: snapshot.data.docs.length,
// // //             itemBuilder: (context, index) {
// // //               DocumentSnapshot ds = snapshot.data.docs[index];
// // //               return ChatRoomListTile(
// // //                 chatRoomId: ds.id,
// // //                 lastMessaage: ds["lastMessaage"],
// // //                 myUserName: myUserName ?? "",
// // //                 time: ds["lastMessageSendTs"],
// // //               );
// // //             },
// // //           );
// // //         }
// // //         return Center(child: Text('No chat rooms available'));
// // //       },
// // //     );
// // //   }

// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Scaffold(
// // //       backgroundColor: Color(0xFF553370),
// // //       body: Container(
// // //         child: Column(
// // //           children: [
// // //             Padding(
// // //               padding: const EdgeInsets.only(
// // //                   left: 20.0, right: 20.0, top: 50.0, bottom: 20.0),
// // //               child: Row(
// // //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// // //                 children: [
// // //                   search
// // //                       ? Expanded(
// // //                           child: TextField(
// // //                           onChanged: (value) {
// // //                             initiateSearch(value.toUpperCase());
// // //                           },
// // //                           decoration: InputDecoration(
// // //                               border: InputBorder.none,
// // //                               hintText: 'Search User',
// // //                               hintStyle: TextStyle(
// // //                                   color: Colors.black,
// // //                                   fontSize: 20.0,
// // //                                   fontWeight: FontWeight.w500)),
// // //                           style: TextStyle(
// // //                               color: Colors.black,
// // //                               fontSize: 18.0,
// // //                               fontWeight: FontWeight.w500),
// // //                         ))
// // //                       : Text(
// // //                           "ChatUp",
// // //                           style: TextStyle(
// // //                               color: Color(0xffc199cd),
// // //                               fontSize: 22.0,
// // //                               fontWeight: FontWeight.bold),
// // //                         ),
// // //                   GestureDetector(
// // //                     onTap: () {
// // //                       search = true;
// // //                       setState(() {});
// // //                     },
// // //                     child: Container(
// // //                       padding: EdgeInsets.all(6),
// // //                       decoration: BoxDecoration(
// // //                           color: Color(0xFF3a2144),
// // //                           borderRadius: BorderRadius.circular(20)),
// // //                       child: search
// // //                           ? GestureDetector(
// // //                               onTap: () {
// // //                                 search = false;
// // //                                 setState(() {});
// // //                               },
// // //                               child:
// // //                                   Icon(Icons.close, color: Color(0xffc199cd)),
// // //                             )
// // //                           : Icon(Icons.search, color: Color(0xffc199cd)),
// // //                     ),
// // //                   ),
// // //                 ],
// // //               ),
// // //             ),
// // //             Container(
// // //               padding: EdgeInsets.symmetric(vertical: 30.0, horizontal: 20.0),
// // //               width: MediaQuery.of(context).size.width,
// // //               height: search
// // //                   ? MediaQuery.of(context).size.height / 1.19
// // //                   : MediaQuery.of(context).size.height / 1.13,
// // //               decoration: BoxDecoration(
// // //                   color: Colors.white,
// // //                   borderRadius: BorderRadius.only(
// // //                       topLeft: Radius.circular(20),
// // //                       topRight: Radius.circular(20))),
// // //               child: Column(
// // //                 children: [
// // //                   search
// // //                       ? ListView(
// // //                           padding: EdgeInsets.only(left: 10.0, right: 10.0),
// // //                           primary: false,
// // //                           shrinkWrap: true,
// // //                           children: tempSearchStore.map((element) {
// // //                             return buildResultCard(element);
// // //                           }).toList())
// // //                       : ChatRoomList(),
// // //                 ],
// // //               ),
// // //             ),
// // //           ],
// // //         ),
// // //       ),
// // //     );
// // //   }

// // //   // Build the result card in the search results
// // //   Widget buildResultCard(data) {
// // //     return GestureDetector(
// // //       onTap: () async {
// // //         print("Tapped on user: ${data['username']}");
// // //         search = false;
// // //         setState(() {});

// // //         // Ensure myUserName is not null before creating chat room
// // //         if (myUserName != null) {
// // //           var chatRoomId =
// // //               getChatRoomIdbyUsername(myUserName!, data["username"]);
// // //           print("Chat Room ID: $chatRoomId");

// // //           Map<String, dynamic> chatRoomInfoMap = {
// // //             "users": [myUserName, data["username"]],
// // //           };

// // //           await DatabaseMethods().createChatRoom(chatRoomId, chatRoomInfoMap);
// // //           Navigator.push(
// // //             context,
// // //             MaterialPageRoute(
// // //               builder: (context) => ChatPage(
// // //                 name: data["Name"],
// // //                 profileurl: data["Photo"],
// // //                 username: data["username"],
// // //               ),
// // //             ),
// // //           );
// // //         } else {
// // //           print("Error: myUserName is null");
// // //         }
// // //       },
// // //       child: Container(
// // //         margin: EdgeInsets.symmetric(vertical: 8),
// // //         child: Material(
// // //           elevation: 5.0,
// // //           borderRadius: BorderRadius.circular(8),
// // //           child: Container(
// // //             padding: EdgeInsets.all(18),
// // //             decoration: BoxDecoration(
// // //               color: Colors.white,
// // //               borderRadius: BorderRadius.circular(10),
// // //             ),
// // //             child: Row(
// // //               children: [
// // //                 ClipRRect(
// // //                   borderRadius: BorderRadius.circular(60),
// // //                   child: Image.network(
// // //                     data["Photo"],
// // //                     height: 70,
// // //                     width: 70,
// // //                     fit: BoxFit.cover,
// // //                   ),
// // //                 ),
// // //                 SizedBox(width: 20.0),
// // //                 Column(
// // //                   crossAxisAlignment: CrossAxisAlignment.start,
// // //                   children: [
// // //                     Text(
// // //                       data["Name"],
// // //                       style: TextStyle(
// // //                           color: Colors.black,
// // //                           fontWeight: FontWeight.bold,
// // //                           fontSize: 18.0),
// // //                     ),
// // //                     SizedBox(height: 8.0),
// // //                     Text(
// // //                       data["username"],
// // //                       style: TextStyle(
// // //                           color: Colors.black,
// // //                           fontWeight: FontWeight.w500,
// // //                           fontSize: 18.0),
// // //                     ),
// // //                   ],
// // //                 ),
// // //               ],
// // //             ),
// // //           ),
// // //         ),
// // //       ),
// // //     );
// // //   }
// // // }

// // // class ChatRoomListTile extends StatefulWidget {
// // //   final String lastMessaage, chatRoomId, myUserName, time;
// // //   ChatRoomListTile(
// // //       {required this.chatRoomId,
// // //       required this.lastMessaage,
// // //       required this.myUserName,
// // //       required this.time});

// // //   @override
// // //   State<ChatRoomListTile> createState() => _ChatRoomListTileState();
// // // }

// // // class _ChatRoomListTileState extends State<ChatRoomListTile> {
// // //   String profilePicUrl = "", name = "", username = "", id = "";

// // //   // Fetch user info for a given chat room ID
// // //   getthisUserInfo() async {
// // //     username =
// // //         widget.chatRoomId.replaceAll("_", "").replaceAll(widget.myUserName, "");
// // //     QuerySnapshot querySnapshot =
// // //         await DatabaseMethods().getUserInfo(username.toUpperCase());
// // //     name = "${querySnapshot.docs[0]["Name"]}";
// // //     profilePicUrl = "${querySnapshot.docs[0]["Photo"]}";
// // //     id = "${querySnapshot.docs[0]["Id"]}";
// // //     setState(() {});
// // //   }

// // //   @override
// // //   void initState() {
// // //     getthisUserInfo();
// // //     super.initState();
// // //   }

// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Container(
// // //       margin: EdgeInsets.symmetric(horizontal: 20.0, vertical: 20.0),
// // //       child: Row(
// // //         crossAxisAlignment: CrossAxisAlignment.start,
// // //         children: [
// // //           profilePicUrl == ""
// // //               ? CircularProgressIndicator()
// // //               : ClipRRect(
// // //                   borderRadius: BorderRadius.circular(60),
// // //                   child: Image.network(profilePicUrl,
// // //                       height: 70, width: 70, fit: BoxFit.cover),
// // //                 ),
// // //           SizedBox(width: 20.0),
// // //           Column(
// // //             crossAxisAlignment: CrossAxisAlignment.start,
// // //             children: [
// // //               SizedBox(height: 10.0),
// // //               Row(
// // //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
// // //                 children: [
// // //                   Text(username,
// // //                       style: TextStyle(color: Colors.black, fontSize: 17.0)),
// // //                   Text(widget.time,
// // //                       style: TextStyle(color: Colors.black, fontSize: 12.0)),
// // //                 ],
// // //               ),
// // //               SizedBox(height: 7.0),
// // //               Text(widget.lastMessaage,
// // //                   style: TextStyle(color: Colors.black, fontSize: 16.0)),
// // //             ],
// // //           ),
// // //         ],
// // //       ),
// // //     );
// // //   }
// // // }

// import 'package:chatapp/pages/chatpage.dart';
// import 'package:chatapp/service/database.dart';
// import 'package:chatapp/service/shared_pref.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:flutter/material.dart';

// class Home extends StatefulWidget {
//   const Home({super.key});

//   @override
//   State<Home> createState() => _HomeState();
// }

// class _HomeState extends State<Home> {
//   bool search = false;

//   // User details
//   String? myName, myProfilePic, myUserName, myEmail;
//   Stream? chatRoomStream;

//   // Future<void> getSharedPref() async {
//   //   myName = await SharedPreferenceHelper().getUserDisplayName();
//   //   myProfilePic = await SharedPreferenceHelper().getUserPic();
//   //   myUserName = await SharedPreferenceHelper().getUserName();
//   //   myEmail = await SharedPreferenceHelper().getUserEmail();

//   //   print("userData: ${myName}");
//   //   setState(() {});
//   // }

//     getSharedPref() async {
//     myName = await SharedPreferenceHelper().getUserDisplayName();
//     myProfilePic = await SharedPreferenceHelper().getUserPic();
//     myUserName = await SharedPreferenceHelper().getUserName();
//     myEmail = await SharedPreferenceHelper().getUserEmail();

//     print("userData: ${myName}");
//     setState(() {});
//   }

// Future<void> ontheload() async {
//   await getSharedPref();
//   if (mounted) {
//     chatRoomStream = await DatabaseMethods().getChatRooms();

//     print("chatRoomStream: ${chatRoomStream}");
//     setState(() {});
//   }
// }

//   // Future<void> onLoad() async {
//   //   await getSharedPref();
//   //   chatRoomStream = await DatabaseMethods().getChatRooms();
//   //   setState(() {});
//   // }

//   Widget ChatRoomList() {
//     return StreamBuilder(
//       stream: chatRoomStream,
//       builder: (context, AsyncSnapshot snapshot) {
//         print("Chat rooms: ${snapshot}");
//         print("Snapshot prop Data: ${snapshot.data}");
//         if (snapshot.connectionState == ConnectionState.waiting) {
//           return Center(child: CircularProgressIndicator());
//         }
//         if (snapshot.hasError) {
//         print("Error: ${snapshot.error}"); // Log the error
//         return Center(child: Text("Error: ${snapshot.error}"));
//       }

//       // If there are no messages
//       if (!snapshot.hasData || snapshot.data.docs.isEmpty) {
//         return Center(child: Text("No messages yet"));
//       }
//         return ListView.builder(
//           padding: EdgeInsets.zero,
//           itemCount: snapshot.data.docs.length,
//           shrinkWrap: true,
//           itemBuilder: (context, index) {
//             DocumentSnapshot ds = snapshot.data.docs[index];
//              print("Message Data: ${ds['message']}");
//              print("Message load: ${ds}");
//             return ChatRoomListTile(
//               chatRoomId: ds.id,
//               lastMessaage: ds["lastMessage"] ?? "",
//               myUserName: myUserName!,
//               time: ds["lastMessageSendTs"]?.toDate().toString() ?? "",
//             );
//           },
//         );
//       },
//     );
//   }

//   @override
//   void initState() {
//     super.initState();
//     ontheload();
//   }

//   String getChatRoomIdByUsername(String a, String b) {
//     if (a.substring(0, 1).codeUnitAt(0) > b.substring(0, 1).codeUnitAt(0)) {
//       return "$b\_$a";
//     } else {
//       return "$a\_$b";
//     }
//   }

//   // Search variables
//   var queryResultSet = [];
//   var tempSearchStore = [];

//   void initiateSearch(String value) {
//     if (value.isEmpty) {
//       setState(() {
//         queryResultSet = [];
//         tempSearchStore = [];
//       });
//     }
//     setState(() {
//       search = true;
//     });

//     var capitalizedValue =
//         value.substring(0, 1).toUpperCase() + value.substring(1);
//     if (queryResultSet.isEmpty && value.length == 1) {
//       DatabaseMethods().searchUsers(value).then((QuerySnapshot docs) {
//         for (var doc in docs.docs) {
//           queryResultSet.add(doc.data());
//         }
//       });
//     } else {
//       tempSearchStore = [];
//       for (var element in queryResultSet) {
//         if (element['username'].startsWith(capitalizedValue)) {
//           setState(() {
//             tempSearchStore.add(element);
//           });
//         }
//       }
//     }
//   }

//   Widget buildResultCard(data) {
//     return GestureDetector(
//       onTap: () async {
//         search = false;
//         setState(() {});

//         var chatRoomId = getChatRoomIdByUsername(myUserName!, data["username"]);
//         Map<String, dynamic> chatRoomInfoMap = {
//           "users": [myUserName, data["username"]],
//         };
//         await DatabaseMethods().createChatRoom(chatRoomId, chatRoomInfoMap);

//         Navigator.push(
//           context,
//           MaterialPageRoute(
//             builder: (context) => ChatPage(
//               name: data["Name"],
//               profileurl: data["Photo"],
//               username: data["username"],
//             ),
//           ),
//         );
//       },
//       child: Container(
//         margin: EdgeInsets.symmetric(vertical: 8),
//         child: Material(
//           elevation: 5.0,
//           borderRadius: BorderRadius.circular(8),
//           child: Container(
//             padding: EdgeInsets.all(18),
//             decoration: BoxDecoration(
//               color: Colors.white,
//               borderRadius: BorderRadius.circular(10),
//             ),
//             child: Row(
//               children: [
//                 ClipRRect(
//                   borderRadius: BorderRadius.circular(60),
//                   child: Image.network(
//                     data["Photo"],
//                     height: 70,
//                     width: 70,
//                     fit: BoxFit.cover,
//                   ),
//                 ),
//                 SizedBox(width: 20.0),
//                 Column(
//                   crossAxisAlignment: CrossAxisAlignment.start,
//                   children: [
//                     Text(
//                       data["Name"],
//                       style: TextStyle(
//                         color: Colors.black,
//                         fontWeight: FontWeight.bold,
//                         fontSize: 18.0,
//                       ),
//                     ),
//                     SizedBox(height: 8.0),
//                     Text(
//                       data["username"],
//                       style: TextStyle(
//                         color: Colors.black,
//                         fontWeight: FontWeight.w500,
//                         fontSize: 18.0,
//                       ),
//                     ),
//                   ],
//                 ),
//               ],
//             ),
//           ),
//         ),
//       ),
//     );
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       backgroundColor: Color(0xFF553370),
//       body: Container(
//         child: Column(
//           children: [
//             Padding(
//               padding: const EdgeInsets.only(
//                   left: 20.0, right: 20.0, top: 50.0, bottom: 20.0),
//               child: Row(
//                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                 children: [
//                   search
//                       ? Expanded(
//                           child: TextField(
//                           onChanged: (value) {
//                             initiateSearch(value.toUpperCase());
//                           },
//                           decoration: InputDecoration(
//                             border: InputBorder.none,
//                             hintText: 'Search User',
//                             hintStyle: TextStyle(
//                               color: Colors.black,
//                               fontSize: 20.0,
//                               fontWeight: FontWeight.w500,
//                             ),
//                           ),
//                           style: TextStyle(
//                             color: Colors.black,
//                             fontSize: 18.0,
//                             fontWeight: FontWeight.w500,
//                           ),
//                         ))
//                       : Text(
//                           "ChatUp",
//                           style: TextStyle(
//                             color: Color(0xffc199cd),
//                             fontSize: 22.0,
//                             fontWeight: FontWeight.bold,
//                           ),
//                         ),
//                   GestureDetector(
//                     onTap: () {
//                       search = !search;
//                       setState(() {});
//                     },
//                     child: Container(
//                       padding: EdgeInsets.all(6),
//                       decoration: BoxDecoration(
//                         color: Color(0xFF3a2144),
//                         borderRadius: BorderRadius.circular(20),
//                       ),
//                       child: Icon(
//                         search ? Icons.close : Icons.search,
//                         color: Color(0xffc199cd),
//                       ),
//                     ),
//                   )
//                 ],
//               ),
//             ),
//             Expanded(
//               child: Container(
//                 padding: EdgeInsets.symmetric(vertical: 30.0, horizontal: 20.0),
//                 decoration: BoxDecoration(
//                   color: Colors.white,
//                   borderRadius: BorderRadius.only(
//                     topLeft: Radius.circular(20),
//                     topRight: Radius.circular(20),
//                   ),
//                 ),
//                 child: search
//                     ? ListView(
//                         padding: EdgeInsets.only(left: 10.0, right: 10.0),
//                         primary: false,
//                         shrinkWrap: true,
//                         children: tempSearchStore.map(buildResultCard).toList(),
//                       )
//                     : ChatRoomList(),
//               ),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }

// class ChatRoomListTile extends StatefulWidget {
//   final String lastMessaage, chatRoomId, myUserName, time;
//   ChatRoomListTile({
//     required this.chatRoomId,
//     required this.lastMessaage,
//     required this.myUserName,
//     required this.time,
//   });

//   @override
//   State<ChatRoomListTile> createState() => _ChatRoomListTileState();
// }

// class _ChatRoomListTileState extends State<ChatRoomListTile> {
//   String profilePicUrl = "", name = "", username = "", id = "";

//   getUserInfo() async {
//     username = widget.chatRoomId
//         .replaceAll("_", "")
//         .replaceAll(widget.myUserName, "");
//     QuerySnapshot querySnapshot =
//         await DatabaseMethods().getUserInfo(username.toUpperCase());
//     name = "${querySnapshot.docs[0]["Name"]}";
//     profilePicUrl = "${querySnapshot.docs[0]["Photo"]}";
//     id =" ${querySnapshot.docs[0]["Id"]}";
//     print("my name ${name}");
//     setState(() {});
//   }

//   @override
//   void initState() {
//     getUserInfo();
//     super.initState();
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Container(
//       margin: EdgeInsets.symmetric(horizontal: 20.0, vertical: 20.0),
//       child: Row(
//         crossAxisAlignment: CrossAxisAlignment.start,
//         children: [
//           profilePicUrl.isEmpty
//               ? CircularProgressIndicator()
//               : ClipRRect(
//                   borderRadius: BorderRadius.circular(60),
//                   child: Image.network(
//                     profilePicUrl,
//                     height: 70,
//                     width: 70,
//                     fit: BoxFit.cover,
//                   ),
//                 ),
//           SizedBox(width: 20.0),
//           Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 10.0),
//               Text(
//                 username,
//                 style: TextStyle(
//                   color: Colors.black,
//                   fontSize: 17.0,
//                   fontWeight: FontWeight.w500,
//                 ),
//               ),
//               Container(
//                 width: MediaQuery.of(context).size.width / 2,
//                 child: Text(
//                   widget.lastMessaage,
//                   overflow: TextOverflow.ellipsis,
//                   style: TextStyle(
//                     color: Colors.black45,
//                     fontSize: 15.0,
//                     fontWeight: FontWeight.w500,
//                   ),
//                 ),
//               ),
//             ],
//           ),
//           Spacer(),
//           Text(
//             widget.time,
//             style: TextStyle(
//               color: Colors.black45,
//               fontSize: 14.0,
//               fontWeight: FontWeight.w500,
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }

//---signin.dart-
// import 'package:chatapp/pages/forgotpassword.dart';
// import 'package:chatapp/pages/home.dart';
// import 'package:chatapp/pages/signup.dart';
// import 'package:chatapp/service/database.dart';
// import 'package:chatapp/service/shared_pref.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:flutter/material.dart';

// class SignIn extends StatefulWidget {
//   const SignIn({super.key});

//   @override
//   State<SignIn> createState() => _SignInState();
// }

// class _SignInState extends State<SignIn> {
//   String email = "", password = "", name = "", pic = "", username = "", id = "";
//   TextEditingController usermailcontroller = new TextEditingController();
//   TextEditingController userpasswordcontroller = new TextEditingController();

//   final _formkey = GlobalKey<FormState>();

//   userLogin() async {
//     try {
//       await FirebaseAuth.instance
//           .signInWithEmailAndPassword(email: email, password: password);

//       QuerySnapshot querySnapshot =
//           await DatabaseMethods().getUserByEmail(email);

//       name = "${querySnapshot.docs[0]["Name"]}";
//       username = "${querySnapshot.docs[0]["username"]}";
//       pic = "${querySnapshot.docs[0]["Photo"]}";
//       id = querySnapshot.docs[0].id;

//       await SharedPreferenceHelper().saveUserDisplayName(name);
//       await SharedPreferenceHelper().saveUserName(username);
//       await SharedPreferenceHelper().saveUserId(id);
//       await SharedPreferenceHelper().saveUserPic(pic);

//       Navigator.pushReplacement(
//           context, MaterialPageRoute(builder: (context) => Home()));
//     } on FirebaseAuthException catch (e) {
//       print("error ${e.code}");
//       if (e.code == "user-not-found") {
//         ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//           backgroundColor: Colors.orangeAccent,
//           content: Text(
//             "No User Found for the Email",
//             style: TextStyle(fontSize: 18.0, color: Colors.black),
//           ),
//         ));
//       } else if (e.code == 'wrong-password') {
//         ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//             content: Text(
//           "Registered Successfully",
//           style: TextStyle(fontSize: 20.0),
//         )));
//       }else{
//          ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//             content: Text(
//           e.code,
//           style: TextStyle(fontSize: 20.0),
//         )));
//       }
//     }
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       body: Container(
//         child: Stack(
//           children: [
//             Container(
//               height: MediaQuery.of(context).size.height / 4.0,
//               width: MediaQuery.of(context).size.width,
//               decoration: BoxDecoration(
//                   gradient: LinearGradient(
//                       colors: [Color(0xFF7f30fe), Color(0xFF6380fb)],
//                       begin: Alignment.topLeft,
//                       end: Alignment.bottomRight),
//                   borderRadius: BorderRadius.vertical(
//                       bottom: Radius.elliptical(
//                           MediaQuery.of(context).size.width, 105.0))),
//             ),
//             Padding(
//               padding: const EdgeInsets.only(top: 70.0),
//               child: Column(
//                 children: [
//                   Center(
//                       child: Text(
//                     "SignIn",
//                     style: TextStyle(
//                         color: Colors.white,
//                         fontSize: 24.0,
//                         fontWeight: FontWeight.bold),
//                   )),
//                   Center(
//                       child: Text(
//                     "LogIn to your account",
//                     style: TextStyle(
//                         color: Color(0xFFbbb0ff),
//                         fontSize: 18.0,
//                         fontWeight: FontWeight.w500),
//                   )),
//                   SizedBox(height: 20.0),
//                   Container(
//                     margin:
//                         EdgeInsets.symmetric(vertical: 20.0, horizontal: 20.0),
//                     child: Material(
//                       elevation: 5.0,
//                       borderRadius: BorderRadius.circular(10),
//                       child: Container(
//                         padding: EdgeInsets.symmetric(
//                             vertical: 8.0, horizontal: 20.0),
//                         height: MediaQuery.of(context).size.height / 2,
//                         width: MediaQuery.of(context).size.width,
//                         decoration: BoxDecoration(
//                             color: Colors.white,
//                             borderRadius: BorderRadius.circular(10)),
//                         child: Padding(
//                           padding: EdgeInsets.only(top: 50),
//                           child: Form(
//                             key: _formkey,
//                             child: Column(
//                               crossAxisAlignment: CrossAxisAlignment.start,
//                               children: [
//                                 Text(
//                                   "Email",
//                                   style: TextStyle(
//                                       color: Colors.black,
//                                       fontSize: 18,
//                                       fontWeight: FontWeight.w500),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   //padding: EdgeInsets.only(left: 10.0),
//                                   decoration: BoxDecoration(
//                                       border: Border.all(
//                                           width: 1.0, color: Colors.black38),
//                                       borderRadius: BorderRadius.circular(10)),
//                                   child: TextFormField(
//                                     controller: usermailcontroller,
//                                     validator: (value) {
//                                       if (value == null || value.isEmpty) {
//                                         return 'Please Enter E-mail';
//                                       }
//                                       return null;
//                                     },
//                                     decoration: InputDecoration(
//                                         border: InputBorder.none,
//                                         prefixIcon: Icon(Icons.mail_outline,
//                                             color: Color(0xFF7f30fe))),
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 20.0,
//                                 ),
//                                 Text(
//                                   "Password",
//                                   style: TextStyle(
//                                       color: Colors.black,
//                                       fontSize: 18,
//                                       fontWeight: FontWeight.w500),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   //padding: EdgeInsets.only(left: 10.0),
//                                   decoration: BoxDecoration(
//                                       border: Border.all(
//                                           width: 1.0, color: Colors.black38),
//                                       borderRadius: BorderRadius.circular(10)),
//                                   child: TextFormField(
//                                     controller: userpasswordcontroller,
//                                     validator: (value) {
//                                       if (value == null || value.isEmpty) {
//                                         return 'Please Enter Password';
//                                       }
//                                       return null;
//                                     },
//                                     decoration: InputDecoration(
//                                         border: InputBorder.none,
//                                         prefixIcon: Icon(
//                                             Icons.password_outlined,
//                                             color: Color(0xFF7f30fe))),
//                                     obscureText: true, //password hide
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   alignment: Alignment.bottomRight,
//                                   child: GestureDetector(
//                                     onTap: () {
//                                       Navigator.push(
//                                         context,
//                                         MaterialPageRoute(
//                                           builder: (context) =>
//                                               ForgotPassword(), // Replace with your Forget Password page class
//                                         ),
//                                       );
//                                     },
//                                     child: Text(
//                                       "Forget Password?",
//                                       style: TextStyle(
//                                           color: Colors.black,
//                                           fontSize: 16,
//                                           fontWeight: FontWeight.w500),
//                                     ),
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 50.0,
//                                 ),
//                                 GestureDetector(
//                                   onTap: () {
//                                     if (_formkey.currentState!.validate()) {
//                                       setState(() {
//                                         email = usermailcontroller.text;
//                                         password = userpasswordcontroller.text;
//                                       });
//                                     }
//                                     userLogin();
//                                   },
//                                   child: Center(
//                                     child: Container(
//                                       width: 130,
//                                       child: Material(
//                                         elevation: 5.0,
//                                         borderRadius: BorderRadius.circular(10),
//                                         child: Container(
//                                           padding: EdgeInsets.all(10),
//                                           decoration: BoxDecoration(
//                                               color: Color(0xFF6380fb),
//                                               borderRadius:
//                                                   BorderRadius.circular(10)),
//                                           child: Center(
//                                               child: Text("SignIn",
//                                                   style: TextStyle(
//                                                       color: Colors.white,
//                                                       fontSize: 18.0,
//                                                       fontWeight:
//                                                           FontWeight.bold))),
//                                         ),
//                                       ),
//                                     ),
//                                   ),
//                                 )
//                               ],
//                             ),
//                           ),
//                         ),
//                       ),
//                     ),
//                   ),
//                   SizedBox(
//                     height: 40.0,
//                   ),
//                   Row(
//                     mainAxisAlignment: MainAxisAlignment.center,
//                     children: [
//                       Text(
//                         "Don't have an account?",
//                         style: TextStyle(color: Colors.black, fontSize: 16.0),
//                       ),
//                       GestureDetector(
//                         onTap: () {
//                           Navigator.push(
//                             context,
//                             MaterialPageRoute(
//                               builder: (context) =>
//                                   SignUp(), // Replace with your SignUp page class
//                             ),
//                           );
//                         },
//                         child: Text(
//                           " Sign Up Now!",
//                           style: TextStyle(
//                               color: Color(0xFF7f30fe),
//                               fontSize: 16.0,
//                               fontWeight: FontWeight.w500),
//                         ),
//                       ),
//                     ],
//                   )
//                 ],
//               ),
//             )
//           ],
//         ),
//       ),
//     );
//   }
// }

//-----signup.dart
// import 'package:chatapp/pages/home.dart';
// import 'package:chatapp/pages/signin.dart';
// import 'package:chatapp/service/database.dart';
// import 'package:chatapp/service/shared_pref.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:flutter/material.dart';
// import 'package:flutter/services.dart';
// import 'package:random_string/random_string.dart';

// class SignUp extends StatefulWidget {
//   const SignUp({super.key});

//   @override
//   State<SignUp> createState() => _SignUpState();
// }

// class _SignUpState extends State<SignUp> {
//   String email = "", password = "", name = "", confirmPassword = "";
//   TextEditingController mailcontroller = new TextEditingController();
//   TextEditingController namecontroller = new TextEditingController();
//   TextEditingController passwordcontroller = new TextEditingController();
//   TextEditingController confirmPasswordcontroller = new TextEditingController();

//   final _formkey = GlobalKey<FormState>();

//   //registration functn allow the user to register app
//  registration() async {
//   // Validation for empty fields
//   if (namecontroller.text.isEmpty) {
//     ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//       backgroundColor: Colors.orangeAccent,
//       content: Text(
//         "Name cannot be empty",
//         style: TextStyle(fontSize: 18.0),
//       ),
//     ));
//     return;
//   }

//   // Validation for email format
//   if (mailcontroller.text.isEmpty || !RegExp(r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$").hasMatch(mailcontroller.text)) {
//     ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//       backgroundColor: Colors.orangeAccent,
//       content: Text(
//         "Please enter a valid email",
//         style: TextStyle(fontSize: 18.0),
//       ),
//     ));
//     return;
//   }

//   // Validation for password length
//   if (password.isEmpty || password.length < 6) {
//     ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//       backgroundColor: Colors.orangeAccent,
//       content: Text(
//         "Password must be at least 6 characters long",
//         style: TextStyle(fontSize: 18.0),
//       ),
//     ));
//     return;
//   }

//   // Validation for password confirmation
//   if (password != confirmPassword) {
//     ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//       backgroundColor: Colors.orangeAccent,
//       content: Text(
//         "Passwords do not match",
//         style: TextStyle(fontSize: 18.0),
//       ),
//     ));
//     return;
//   }

//   try {
//     // Create user with email and password
//     UserCredential userCredential = await FirebaseAuth.instance
//         .createUserWithEmailAndPassword(email: email, password: password);

//     // Generate a simple unique ID based on timestamp
//     String Id = DateTime.now().millisecondsSinceEpoch.toString();
//     String user = mailcontroller.text.replaceAll("@gmail.com", "");
//     String updateusername = user.replaceFirst(user[0], user[0].toUpperCase());
//     String firstletter = user.substring(0, 1).toUpperCase();

//     // Upload data in Firestore
//     Map<String, dynamic> userInfoMap = {
//       "Name": namecontroller.text,
//       "E-mail": mailcontroller.text,
//       "username": updateusername.toUpperCase(),
//       "SearchKey": firstletter,
//       "Photo": "https://t4.ftcdn.net/jpg/02/77/75/81/360_F_277758134_N1DrPaZUdmXarAC1R5d624FkNZ1qD0hR.jpg",
//       "Id": Id,
//     };

//     await DatabaseMethods().addUserDetails(userInfoMap, Id);
//     await SharedPreferenceHelper().saveUserId(Id);
//     await SharedPreferenceHelper().saveUserDisplayName(namecontroller.text);
//     await SharedPreferenceHelper().saveUserEmail(mailcontroller.text);
//     await SharedPreferenceHelper().saveUserPic(
//         "https://t4.ftcdn.net/jpg/02/77/75/81/360_F_277758134_N1DrPaZUdmXarAC1R5d624FkNZ1qD0hR.jpg");
//     await SharedPreferenceHelper().saveUserName(
//         mailcontroller.text.replaceAll("@gmail.com", "").toUpperCase());

//     // Show success message and navigate to the Home screen
//     ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//       content: Text(
//         "Registered Successfully",
//         style: TextStyle(fontSize: 20.0),
//       ),
//     ));
//     Navigator.pushReplacement(
//         context, MaterialPageRoute(builder: (context) => Home()));

//   } on FirebaseAuthException catch (e) {
//     // Handle Firebase Auth exceptions
//     if (e.code == 'weak-password') {
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//         backgroundColor: Colors.orangeAccent,
//         content: Text(
//           "Password Provided is too Weak",
//           style: TextStyle(fontSize: 18.0),
//         ),
//       ));
//     } else if (e.code == 'email-already-in-use') {
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//         backgroundColor: Colors.orangeAccent,
//         content: Text(
//           "Account Already exists",
//           style: TextStyle(fontSize: 18.0),
//         ),
//       ));
//     } else {
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
//         content: Text(
//           e.message ?? "An error occurred",
//           style: TextStyle(fontSize: 18.0),
//         ),
//       ));
//     }
//   }
// }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       body: Container(
//         child: Stack(
//           children: [
//             Container(
//               height: MediaQuery.of(context).size.height / 4.0,
//               width: MediaQuery.of(context).size.width,
//               decoration: BoxDecoration(
//                   gradient: LinearGradient(
//                       colors: [Color(0xFF7f30fe), Color(0xFF6380fb)],
//                       begin: Alignment.topLeft,
//                       end: Alignment.bottomRight),
//                   borderRadius: BorderRadius.vertical(
//                       bottom: Radius.elliptical(
//                           MediaQuery.of(context).size.width, 105.0))),
//             ),
//             Padding(
//               padding: const EdgeInsets.only(top: 70.0),
//               child: Column(
//                 children: [
//                   Center(
//                       child: Text(
//                     "SignUp",
//                     style: TextStyle(
//                         color: Colors.white,
//                         fontSize: 24.0,
//                         fontWeight: FontWeight.bold),
//                   )),
//                   Center(
//                       child: Text(
//                     "Create a new Account",
//                     style: TextStyle(
//                         color: Color(0xFFbbb0ff),
//                         fontSize: 18.0,
//                         fontWeight: FontWeight.w500),
//                   )),
//                   SizedBox(height: 20.0),
//                   Container(
//                     margin:
//                         EdgeInsets.symmetric(vertical: 20.0, horizontal: 20.0),
//                     child: Material(
//                       elevation: 5.0,
//                       borderRadius: BorderRadius.circular(10),
//                       child: Container(
//                         padding: EdgeInsets.symmetric(
//                             vertical: 8.0, horizontal: 20.0),
//                         height: MediaQuery.of(context).size.height / 1.6,
//                         width: MediaQuery.of(context).size.width,
//                         decoration: BoxDecoration(
//                             color: Colors.white,
//                             borderRadius: BorderRadius.circular(10)),
//                         child: Padding(
//                           padding: EdgeInsets.only(top: 50),
//                           child: Form(
//                             key: _formkey,
//                             child: Column(
//                               crossAxisAlignment: CrossAxisAlignment.start,
//                               children: [
//                                 Text(
//                                   "Name",
//                                   style: TextStyle(
//                                       color: Colors.black,
//                                       fontSize: 18,
//                                       fontWeight: FontWeight.w500),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   //padding: EdgeInsets.only(left: 10.0),
//                                   decoration: BoxDecoration(
//                                       border: Border.all(
//                                           width: 1.0, color: Colors.black38),
//                                       borderRadius: BorderRadius.circular(10)),
//                                   child: TextFormField(
//                                     controller: namecontroller,
//                                     validator: (value) {
//                                       if (value == null || value.isEmpty) {
//                                         return 'Please Enter Name';
//                                       }
//                                       return null;
//                                     },
//                                     decoration: InputDecoration(
//                                       border: InputBorder.none,
//                                       prefixIcon: Icon(Icons.person_outlined,
//                                           color: Color(0xFF7f30fe)),
//                                     ),
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 20.0,
//                                 ),
//                                 Text(
//                                   "Email",
//                                   style: TextStyle(
//                                       color: Colors.black,
//                                       fontSize: 18,
//                                       fontWeight: FontWeight.w500),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   decoration: BoxDecoration(
//                                       border: Border.all(
//                                           width: 1.0, color: Colors.black38),
//                                       borderRadius: BorderRadius.circular(10)),
//                                   child: TextFormField(
//                                     controller: mailcontroller,
//                                     validator: (value) {
//                                       if (value == null || value.isEmpty) {
//                                         return 'Please Enter E-mail';
//                                       }
//                                       return null;
//                                     },
//                                     decoration: InputDecoration(
//                                         border: InputBorder.none,
//                                         prefixIcon: Icon(Icons.mail_outline,
//                                             color: Color(0xFF7f30fe))),
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 20.0,
//                                 ),
//                                 Text(
//                                   "Password",
//                                   style: TextStyle(
//                                       color: Colors.black,
//                                       fontSize: 18,
//                                       fontWeight: FontWeight.w500),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   decoration: BoxDecoration(
//                                       border: Border.all(
//                                           width: 1.0, color: Colors.black38),
//                                       borderRadius: BorderRadius.circular(10)),
//                                   child: TextFormField(
//                                     controller: passwordcontroller,
//                                     validator: (value) {
//                                       if (value == null || value.isEmpty) {
//                                         return 'Please Enter Password';
//                                       }
//                                       return null;
//                                     },
//                                     decoration: InputDecoration(
//                                         border: InputBorder.none,
//                                         prefixIcon: Icon(
//                                             Icons.password_outlined,
//                                             color: Color(0xFF7f30fe))),
//                                     obscureText: true, //password hide
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 20.0,
//                                 ),
//                                 Text(
//                                   " Confirm Password",
//                                   style: TextStyle(
//                                       color: Colors.black,
//                                       fontSize: 18,
//                                       fontWeight: FontWeight.w500),
//                                 ),
//                                 SizedBox(
//                                   height: 10.0,
//                                 ),
//                                 Container(
//                                   decoration: BoxDecoration(
//                                       border: Border.all(
//                                           width: 1.0, color: Colors.black38),
//                                       borderRadius: BorderRadius.circular(10)),
//                                   child: TextFormField(
//                                     controller: confirmPasswordcontroller,
//                                     validator: (value) {
//                                       if (value == null || value.isEmpty) {
//                                         return 'Please Enter Confirm Password';
//                                       }
//                                       return null;
//                                     },
//                                     decoration: InputDecoration(
//                                         border: InputBorder.none,
//                                         prefixIcon: Icon(
//                                             Icons.password_outlined,
//                                             color: Color(0xFF7f30fe))),
//                                     obscureText: true, //password hide
//                                   ),
//                                 ),
//                                 SizedBox(
//                                   height: 40.0,
//                                 ),
//                                 Row(
//                                   mainAxisAlignment: MainAxisAlignment.center,
//                                   children: [
//                                     Text(
//                                       "Already have an account?",
//                                       style: TextStyle(
//                                           color: Colors.black, fontSize: 16.0),
//                                     ),
//                                     GestureDetector(
//                                       onTap: () {
//                                         Navigator.push(
//                                             context,
//                                             MaterialPageRoute(
//                                                 builder: (context) =>
//                                                     SignIn()));
//                                       },
//                                       child: Text(
//                                         " Sign In",
//                                         style: TextStyle(
//                                             color: Color(0xFF7f30fe),
//                                             fontSize: 16.0,
//                                             fontWeight: FontWeight.w500),
//                                       ),
//                                     ),
//                                   ],
//                                 ),
//                               ],
//                             ),
//                           ),
//                         ),
//                       ),
//                     ),
//                   ),
//                   SizedBox(
//                     height: 30.0,
//                   ),
//                   GestureDetector(
//                     onTap: () {
//                       if (_formkey.currentState!.validate()) {
//                         setState(() {
//                           email = mailcontroller.text;
//                           name = namecontroller.text;
//                           password = passwordcontroller.text;
//                           confirmPassword = confirmPasswordcontroller.text;
//                         });
//                       }
//                       registration();
//                     },
//                     child: Center(
//                       child: Container(
//                         margin: EdgeInsets.symmetric(horizontal: 20.0),
//                         width: MediaQuery.of(context).size.width,
//                         child: Material(
//                           elevation: 5.0,
//                           borderRadius: BorderRadius.circular(10),
//                           child: Container(
//                             padding: EdgeInsets.all(10),
//                             decoration: BoxDecoration(
//                                 color: Color(0xFF6380fb),
//                                 borderRadius: BorderRadius.circular(10)),
//                             child: Center(
//                                 child: Text("SIGN UP",
//                                     style: TextStyle(
//                                         color: Colors.white,
//                                         fontSize: 18.0,
//                                         fontWeight: FontWeight.bold))),
//                           ),
//                         ),
//                       ),
//                     ),
//                   ),
//                 ],
//               ),
//             )
//           ],
//         ),
//       ),
//     );
//   }
// }












// // import 'package:chatapp/pages/home.dart';
// // import 'package:chatapp/pages/signin.dart';
// // import 'package:chatapp/service/database.dart';
// // import 'package:chatapp/service/shared_pref.dart';
// // import 'package:firebase_auth/firebase_auth.dart';
// // import 'package:flutter/material.dart';
// // import 'package:flutter/services.dart';

// // class SignUp extends StatefulWidget {
// //   const SignUp({super.key});

// //   @override
// //   State<SignUp> createState() => _SignUpState();
// // }

// // class _SignUpState extends State<SignUp> {
// //   String email = "", password = "", name = "", confirmPassword = "";
// //   TextEditingController mailcontroller = new TextEditingController();
// //   TextEditingController namecontroller = new TextEditingController();
// //   TextEditingController passwordcontroller = new TextEditingController();
// //   TextEditingController confirmPasswordcontroller = new TextEditingController();

// //   final _formkey = GlobalKey<FormState>();
// //   bool _isLoading = false; // To manage loading state

// //   // registration function to allow the user to register
// //   registration() async {
// //     setState(() {
// //       _isLoading = true; // Show loading indicator
// //     });

// //     // Validation for empty fields
// //     if (namecontroller.text.isEmpty) {
// //       setState(() {
// //         _isLoading = false;
// //       });
// //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //         backgroundColor: Colors.orangeAccent,
// //         content: Text(
// //           "Name cannot be empty",
// //           style: TextStyle(fontSize: 18.0),
// //         ),
// //       ));
// //       return;
// //     }

// //     // Validation for email format
// //     if (mailcontroller.text.isEmpty ||
// //         !RegExp(r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$")
// //             .hasMatch(mailcontroller.text)) {
// //       setState(() {
// //         _isLoading = false;
// //       });
// //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //         backgroundColor: Colors.orangeAccent,
// //         content: Text(
// //           "Please enter a valid email",
// //           style: TextStyle(fontSize: 18.0),
// //         ),
// //       ));
// //       return;
// //     }

// //     // Validation for password length
// //     if (password.isEmpty || password.length < 6) {
// //       setState(() {
// //         _isLoading = false;
// //       });
// //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //         backgroundColor: Colors.orangeAccent,
// //         content: Text(
// //           "Password must be at least 6 characters long",
// //           style: TextStyle(fontSize: 18.0),
// //         ),
// //       ));
// //       return;
// //     }

// //     // Validation for password confirmation
// //     if (password != confirmPassword) {
// //       setState(() {
// //         _isLoading = false;
// //       });
// //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //         backgroundColor: Colors.orangeAccent,
// //         content: Text(
// //           "Passwords do not match",
// //           style: TextStyle(fontSize: 18.0),
// //         ),
// //       ));
// //       return;
// //     }

// //     try {
// //       // Create user with email and password
// //       UserCredential userCredential =
// //           await FirebaseAuth.instance.createUserWithEmailAndPassword(
// //               email: email, password: password);

// //       // Generate a simple unique ID based on timestamp
// //       String Id = DateTime.now().millisecondsSinceEpoch.toString();
// //       String user = mailcontroller.text.replaceAll("@gmail.com", "");
// //       String updateusername = user.replaceFirst(user[0], user[0].toUpperCase());
// //       String firstletter = user.substring(0, 1).toUpperCase();

// //       // Upload data in Firestore
// //       Map<String, dynamic> userInfoMap = {
// //         "Name": namecontroller.text,
// //         "E-mail": mailcontroller.text,
// //         "username": updateusername.toUpperCase(),
// //         "SearchKey": firstletter,
// //         "Photo":
// //             "https://t4.ftcdn.net/jpg/02/77/75/81/360_F_277758134_N1DrPaZUdmXarAC1R5d624FkNZ1qD0hR.jpg",
// //         "Id": Id,
// //       };

// //       await DatabaseMethods().addUserDetails(userInfoMap, Id);
// //       await SharedPreferenceHelper().saveUserId(Id);
// //       await SharedPreferenceHelper().saveUserDisplayName(namecontroller.text);
// //       await SharedPreferenceHelper().saveUserEmail(mailcontroller.text);
// //       await SharedPreferenceHelper().saveUserPic(
// //           "https://t4.ftcdn.net/jpg/02/77/75/81/360_F_277758134_N1DrPaZUdmXarAC1R5d624FkNZ1qD0hR.jpg");
// //       await SharedPreferenceHelper().saveUserName(
// //           mailcontroller.text.replaceAll("@gmail.com", "").toUpperCase());

// //       // Show success message and navigate to the Home screen
// //       setState(() {
// //         _isLoading = false; // Hide loading indicator
// //       });
// //       ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //         content: Text(
// //           "Registered Successfully",
// //           style: TextStyle(fontSize: 20.0),
// //         ),
// //       ));
// //       Navigator.pushReplacement(
// //           context, MaterialPageRoute(builder: (context) => Home()));
// //     } on FirebaseAuthException catch (e) {
// //       setState(() {
// //         _isLoading = false; // Hide loading indicator
// //       });
// //       // Handle Firebase Auth exceptions
// //       if (e.code == 'weak-password') {
// //         ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //           backgroundColor: Colors.orangeAccent,
// //           content: Text(
// //             "Password Provided is too Weak",
// //             style: TextStyle(fontSize: 18.0),
// //           ),
// //         ));
// //       } else if (e.code == 'email-already-in-use') {
// //         ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //           backgroundColor: Colors.orangeAccent,
// //           content: Text(
// //             "Account Already exists",
// //             style: TextStyle(fontSize: 18.0),
// //           ),
// //         ));
// //       } else {
// //         ScaffoldMessenger.of(context).showSnackBar(SnackBar(
// //           content: Text(
// //             e.message ?? "An error occurred",
// //             style: TextStyle(fontSize: 18.0),
// //           ),
// //         ));
// //       }
// //     }
// //   }

// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //       body: Stack(
// //         children: [
// //           Container(
// //             height: MediaQuery.of(context).size.height / 4.0,
// //             width: MediaQuery.of(context).size.width,
// //             decoration: BoxDecoration(
// //                 gradient: LinearGradient(
// //                     colors: [Color(0xFF7f30fe), Color(0xFF6380fb)],
// //                     begin: Alignment.topLeft,
// //                     end: Alignment.bottomRight),
// //                 borderRadius: BorderRadius.vertical(
// //                     bottom: Radius.elliptical(
// //                         MediaQuery.of(context).size.width, 105.0))),
// //           ),
// //           Padding(
// //             padding: const EdgeInsets.only(top: 70.0),
// //             child: SingleChildScrollView(
// //               child: Column(
// //                 children: [
// //                   Center(
// //                       child: Text(
// //                     "SignUp",
// //                     style: TextStyle(
// //                         color: Colors.white,
// //                         fontSize: 24.0,
// //                         fontWeight: FontWeight.bold),
// //                   )),
// //                   Center(
// //                       child: Text(
// //                     "Create a new Account",
// //                     style: TextStyle(
// //                         color: Color(0xFFbbb0ff),
// //                         fontSize: 18.0,
// //                         fontWeight: FontWeight.w500),
// //                   )),
// //                   SizedBox(height: 20.0),
// //                   Container(
// //                     margin: EdgeInsets.symmetric(vertical: 20.0, horizontal: 20.0),
// //                     child: Material(
// //                       elevation: 5.0,
// //                       borderRadius: BorderRadius.circular(10),
// //                       child: Container(
// //                         padding: EdgeInsets.symmetric(
// //                             vertical: 8.0, horizontal: 20.0),
// //                         height: MediaQuery.of(context).size.height / 1.6,
// //                         width: MediaQuery.of(context).size.width,
// //                         decoration: BoxDecoration(
// //                             color: Colors.white,
// //                             borderRadius: BorderRadius.circular(10)),
// //                         child: Padding(
// //                           padding: EdgeInsets.only(top: 50),
// //                           child: Form(
// //                             key: _formkey,
// //                             child: Column(
// //                               crossAxisAlignment: CrossAxisAlignment.start,
// //                               children: [
// //                                 // Name Field
// //                                 TextFormField(
// //                                   controller: namecontroller,
// //                                   decoration: InputDecoration(
// //                                     labelText: "Name",
// //                                     prefixIcon: Icon(Icons.person),
// //                                     border: OutlineInputBorder(),
// //                                   ),
// //                                   validator: (value) {
// //                                     if (value == null || value.isEmpty) {
// //                                       return 'Name cannot be empty';
// //                                     }
// //                                     return null;
// //                                   },
// //                                 ),
// //                                 SizedBox(height: 15.0),

// //                                 // Email Field
// //                                 TextFormField(
// //                                   controller: mailcontroller,
// //                                   keyboardType: TextInputType.emailAddress,
// //                                   decoration: InputDecoration(
// //                                     labelText: "Email",
// //                                     prefixIcon: Icon(Icons.email),
// //                                     border: OutlineInputBorder(),
// //                                   ),
// //                                   validator: (value) {
// //                                     if (value == null || value.isEmpty) {
// //                                       return 'Email cannot be empty';
// //                                     }
// //                                     return null;
// //                                   },
// //                                 ),
// //                                 SizedBox(height: 15.0),

// //                                 // Password Field
// //                                 TextFormField(
// //                                   controller: passwordcontroller,
// //                                   obscureText: true,
// //                                   decoration: InputDecoration(
// //                                     labelText: "Password",
// //                                     prefixIcon: Icon(Icons.lock),
// //                                     border: OutlineInputBorder(),
// //                                   ),
// //                                   validator: (value) {
// //                                     if (value == null || value.length < 6) {
// //                                       return 'Password should be at least 6 characters';
// //                                     }
// //                                     return null;
// //                                   },
// //                                 ),
// //                                 SizedBox(height: 15.0),

// //                                 // Confirm Password Field
// //                                 TextFormField(
// //                                   controller: confirmPasswordcontroller,
// //                                   obscureText: true,
// //                                   decoration: InputDecoration(
// //                                     labelText: "Confirm Password",
// //                                     prefixIcon: Icon(Icons.lock),
// //                                     border: OutlineInputBorder(),
// //                                   ),
// //                                   validator: (value) {
// //                                     if (value != passwordcontroller.text) {
// //                                       return 'Passwords do not match';
// //                                     }
// //                                     return null;
// //                                   },
// //                                 ),
// //                                 SizedBox(height: 30.0),

// //                                 // Register Button
// //                                 _isLoading
// //                                     ? Center(child: CircularProgressIndicator())
// //                                     : GestureDetector(
// //                                         onTap: () {
// //                                           if (_formkey.currentState!.validate()) {
// //                                             setState(() {
// //                                               email = mailcontroller.text;
// //                                               name = namecontroller.text;
// //                                               password = passwordcontroller.text;
// //                                               confirmPassword = confirmPasswordcontroller.text;
// //                                             });
// //                                           }
// //                                           registration();
// //                                         },
// //                                         child: Center(
// //                                           child: Container(
// //                                             margin: EdgeInsets.symmetric(horizontal: 20.0),
// //                                             width: MediaQuery.of(context).size.width,
// //                                             child: Material(
// //                                               elevation: 5.0,
// //                                               borderRadius: BorderRadius.circular(10),
// //                                               child: Container(
// //                                                 padding: EdgeInsets.all(10),
// //                                                 decoration: BoxDecoration(
// //                                                     color: Color(0xFF6380fb),
// //                                                     borderRadius: BorderRadius.circular(10)),
// //                                                 child: Center(
// //                                                     child: Text("SIGN UP",
// //                                                         style: TextStyle(
// //                                                             color: Colors.white,
// //                                                             fontSize: 18.0,
// //                                                             fontWeight: FontWeight.bold))),
// //                                               ),
// //                                             ),
// //                                           ),
// //                                         ),
// //                                       ),
// //                                 SizedBox(height: 15.0),

// //                                 // Sign In Link
// //                                 GestureDetector(
// //                                   onTap: () {
// //                                     Navigator.pushReplacement(context,
// //                                         MaterialPageRoute(builder: (context) => SignIn()));
// //                                   },
// //                                   child: Center(
// //                                     child: Text("Already have an account? Sign in",
// //                                         style: TextStyle(
// //                                             color: Color(0xFF6380fb),
// //                                             fontWeight: FontWeight.bold,
// //                                             fontSize: 18.0)),
// //                                   ),
// //                                 ),
// //                               ],
// //                             ),
// //                           ),
// //                         ),
// //                       ),
// //                     ),
// //                   ),
// //                 ],
// //               ),
// //             ),
// //           ),
// //         ],
// //       ),
// //     );
// //   }
// // }

//-----database.dart

// class DatabaseMethods{
//   final FirebaseFirestore _firestore = FirebaseFirestore.instance;

//   Future addUserDetails(Map<String, dynamic> userInfoMap, String id) async{
//     return await FirebaseFirestore.instance
//     .collection("users")
//     .doc(id)
//     .set(userInfoMap);
//   }

//   Future<QuerySnapshot> getUserbyemail(String email)async{
//     return await FirebaseFirestore.instance
//     .collection("users")
//     .where("E-mail", isEqualTo:email)
//     .get();
//   }

//   Future <QuerySnapshot> Search(String username) async{
//     return await FirebaseFirestore.instance
//     .collection("users")
//     .where("SearchKey",
//     isEqualTo: username.substring(0,1).toUpperCase())
//     .get();
//   }

//   //separate chatroom raw query database room
//   createChatRoom(
//     String chatRoomId, Map<String, dynamic>chatRoomInfoMap) async {
//     final snapshot = await FirebaseFirestore.instance
//     .collection("chatrooms")
//     .doc(chatRoomId)
//     .get();
//     if(snapshot.exists){
//       return true;
//     }else{
//       return FirebaseFirestore.instance
//       .collection("chatrooms")
//       .doc(chatRoomId)
//       .set(chatRoomInfoMap);
//     }
//   }
// //------------

//   //send msg to user on chatroom
//   // Future addMessage(String chatRoomId, String messageId, Map<String, dynamic> messageInfoMap)async{
//   //  return FirebaseFirestore.instance
//   //  .collection("chatrooms")
//   //  .doc(chatRoomId)
//   //  .collection("chats")
//   //  .doc(messageId)
//   //  .set(messageInfoMap);
//   // }

//   // updatedLastMessageSend(String chatRoomId, Map<String, dynamic>lastMessaageInfoMap){
//   //   return FirebaseFirestore.instance
//   //   .collection("chatrooms")
//   //   .doc(chatRoomId)
//   //   .update(lastMessaageInfoMap);
//   // }
// /// Adds a message to the database
// Future<void> addMessage(String chatRoomId, String messageId, Map<String, dynamic> messageInfoMap) async {
//   await _firestore
//       .collection("chatRooms")
//       .doc(chatRoomId)
//       .collection("chats") // Changed from "messages" to "chats"
//       .doc(messageId)
//       .set(messageInfoMap);
// }

//   /// Updates the last message sent in the chat room
//   Future<void> updateLastMessageSend(String chatRoomId, Map<String, dynamic> lastMessageInfoMap) async {
//     await _firestore
//         .collection("ChatRooms")
//         .doc(chatRoomId)
//         .update(lastMessageInfoMap);
//   }

//   // Future<Stream<QuerySnapshot>> getChatRoomMessages(chatRoomId)async{
//   //   return FirebaseFirestore.instance
//   //   .collection("chatrooms")
//   //   .doc(chatRoomId)
//   //   .collection("chats")
//   //   .orderBy("time", descending: true)
//   //   .snapshots();
//   // }
// Stream getChatRoomMessages(String chatRoomId) {

//   print("Fetching messages for chat room: $chatRoomId");
//   return FirebaseFirestore.instance
//       .collection("chatRooms")
//       .doc(chatRoomId)
//       .collection("chats")
//       .orderBy("time", descending: true)
//       .snapshots()
//       .map((snapshot) {
//         // Debug: Log all documents in the stream

//           print("Document: ${snapshot.docs}");

//         return snapshot;
//       });

//     //   FirebaseFirestore.instance
//     // .collection('chatRooms')
//     // .doc(chatRoomId!)
//     // .collection('chats')
//     // .get()
//     // .then((querySnapshot) {
//     //   print("Message count: ${querySnapshot.docs.length}");
//     // });
// }

// Future<QuerySnapshot> getUserInfo(String username)async{
//   return await FirebaseFirestore.instance
//   .collection("users")
//   .where("username", isEqualTo: username)
//   .get();
// }

// Future<Stream<QuerySnapshot>> getChatRooms(String s) async {
//   String? myUserName = await SharedPreferenceHelper().getUserName();
//   // return FirebaseFirestore.instance
//   //     .collection("chatrooms")
//   //     .orderBy("time", descending: true)
//   //     .where("users", arrayContains: myUserName!)
//   //     .snapshots();
//   return FirebaseFirestore.instance
//     .collection("chatRooms")
//     .orderBy("time", descending: true)
//     .where("users", arrayContains: myUserName!)
//     .snapshots();
// }

// }



